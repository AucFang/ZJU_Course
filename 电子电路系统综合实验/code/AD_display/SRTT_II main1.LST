C51 COMPILER V9.60.0.0   SRTT_II_MAIN1                                                     07/05/2022 17:20:33 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE SRTT_II_MAIN1
OBJECT MODULE PLACED IN .\output\SRTT_II main1.obj
COMPILER INVOKED BY: D:\software\Keil_v5\C51\BIN\C51.EXE SRTT_II main1.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TAB
                    -S(2) OBJECT(.\output\SRTT_II main1.obj)

line level    source

   1          #include <reg52.h>
   2          #include <STC12C.h>
   3          #include <intrins.h>              
   4          
   5          #define Uchar unsigned char
   6          #define Uint unsigned int
   7          #define uchar unsigned char
   8          #define uint unsigned int
   9          #define ulong unsigned long
  10          #define Ulong unsigned long
  11          
  12          /* 定义命令 */
  13          #define ISP_IAP_BYTE_READ   0x01        /*  字节读数据存储区   */
  14          #define ISP_IAP_BYTE_PROGRAM    0x02        /*  字节编程数据存储区 */
  15          #define ISP_IAP_SECTOR_ERASE    0x03        /*  扇区擦除数据存储区 */
  16          
  17          /* 定义Flash 操作等待时间 */
  18          #define ENABLE_ISP        0x84
  19          #define DATA_FLASH_START_ADDRESS           0x2800
  20          
  21          typedef     unsigned char INT8U;    /* 8 bit 无符号整型  */
  22          typedef     unsigned int    INT16U;     /* 16 bit 无符号整型 */
  23          #define   DELAY_CONST         60000
  24          
  25          /* 定义常量 */
  26          #define ERROR   0
  27          #define OK      1
  28          
  29          // 控制引脚定义，不同的连接必须修改的部分
  30          sbit RS=P3^2;    /*LCD寄存器选择信号*/
  31          sbit RW=P3^3;      /*LCD读写信号*/
  32          sbit Elcm=P3^4;    /*LCD片选信号*/  
  33          
  34          unsigned int data AdcMem;
  35          unsigned char data tempAdc;
  36          unsigned char lcd_data[5];
  37          
  38          unsigned int i,k,j;
  39          //unsigned char tempC;
  40          unsigned char overflag;
  41          unsigned char changeflag;
  42              
  43          #define DataPort P2                // lcd数据端口
  44          #define Busy    0x80
  45          
  46          char idata word_storeroom[]={'0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'}; 
  47                                                      //单字节 idata 表示变量位于内部数据区
  48          void Delay400Ms(void);
  49          void Delay5Ms(void);
  50          void WaitForEnable( void );
  51          void LcdWriteData( char dataW );
  52          void LcdWriteCommand( Uchar CMD,Uchar AttribC );
  53          void LcdReset( void );
  54          
C51 COMPILER V9.60.0.0   SRTT_II_MAIN1                                                     07/05/2022 17:20:33 PAGE 2   

  55          void Display( Uchar dd );
  56          void DispOneChar(Uchar x,Uchar y,Uchar Wdata);
  57          //void ePutstr(Uchar x,Uchar y, Uchar code *ptr);
  58          void SmallCur(void);
  59          void BigCur(void);
  60          void send(uchar i);
  61          
  62          /*=======================================================
  63          显示光标定位
  64          =======================================================*/
  65          void Disp_XY( char posx,char posy) {
  66   1      
  67   1      uchar temp;
  68   1      
  69   1          temp = posx %40;// & 0x07;
  70   1          posy &= 0x01;
  71   1          if ( posy==1)  {temp |= 0x40;}
  72   1          temp |= 0x80;
  73   1          LcdWriteCommand(temp,1);
  74   1      }
  75          
  76          /*=======================================================
  77          按指定位置显示数出一个字符
  78          =======================================================*/
  79          void DispOneChar(Uchar x,Uchar y,Uchar Wdata) {
  80   1      
  81   1          Disp_XY( x, y );                // 定位显示地址
  82   1          LcdWriteData( Wdata );            // 写字符
  83   1      }
  84          
  85          /*=======================================================
  86          初始化程序, 必须按照产品资料介绍的初始化过程进行
  87          =======================================================*/
  88          void LcdReset( void ) {
  89   1      
  90   1           LcdWriteCommand( 0x38, 0);            // 显示模式设置(不检测忙信号)
  91   1              Delay5Ms();
  92   1          LcdWriteCommand( 0x38, 0);            // 共三次
  93   1              Delay5Ms();
  94   1          LcdWriteCommand( 0x38, 0);
  95   1              Delay5Ms();
  96   1      
  97   1          LcdWriteCommand( 0x38, 1);            // 显示模式设置(以后均检测忙信号)
  98   1          LcdWriteCommand( 0x08, 1);            // 显示关闭
  99   1          LcdWriteCommand( 0x01, 1);            // 显示清屏
 100   1          LcdWriteCommand( 0x06, 1);            // 显示光标移动设置
 101   1          LcdWriteCommand( 0x0c, 1);            // 显示开及光标设置
 102   1          LcdWriteCommand( 0x02, 1);            // 显示开及光标设置
 103   1      }
 104          
 105          /*=======================================================
 106          写控制字符子程序: E=1 RS=0 RW=0
 107          =======================================================*/
 108          void LcdWriteCommand( Uchar CMD,Uchar AttribC ) {
 109   1      
 110   1          if (AttribC) WaitForEnable();                // 检测忙信号?
 111   1      
 112   1          RS = 0;    RW = 0; _nop_();    //一个nop约等于1/32us
 113   1      
 114   1          DataPort = CMD; _nop_();
 115   1          // 送控制字子程序
 116   1      
C51 COMPILER V9.60.0.0   SRTT_II_MAIN1                                                     07/05/2022 17:20:33 PAGE 3   

 117   1          Elcm = 1;_nop_();_nop_();Elcm = 0;            // 操作允许脉冲信号
 118   1      }
 119          
 120          /*=======================================================
 121          当前位置写字符子程序: E =1 RS=1 RW=0
 122          =======================================================*/
 123          void LcdWriteData( char dataW ) {
 124   1      
 125   1          WaitForEnable();
 126   1              // 检测忙信号
 127   1      
 128   1          RS = 1; RW = 0; _nop_();
 129   1      
 130   1          DataPort = dataW; _nop_();
 131   1      
 132   1          Elcm = 1; _nop_(); _nop_(); Elcm = 0;        // 操作允许脉冲信号
 133   1      
 134   1      }
 135          
 136          /*=======================================================
 137          正常读写操作之前必须检测LCD控制器状态:    CS=1 RS=0 RW=1
 138          DB7:    0  LCD控制器空闲; 1  LCD控制器忙
 139          ========================================================*/
 140          void WaitForEnable( void ) {
 141   1          DataPort = 0xff;
 142   1          RS =0;
 143   1        RW = 1; 
 144   1        _nop_();    
 145   1        Elcm = 1; 
 146   1        _nop_(); 
 147   1        _nop_();
 148   1          while( DataPort & Busy ); //看DB7
 149   1          Elcm = 0;
 150   1      }
 151          
 152          
 153          // 短延时
 154          void Delay5Ms(void)
 155          {
 156   1          Uint i = 5552;
 157   1          while(i--);
 158   1      }
 159          
 160          //长延时
 161          void Delay400Ms(void)
 162          {
 163   1          Uchar i = 5;
 164   1          Uint j;
 165   1          while(i--)
 166   1          {
 167   2              j=7269;
 168   2              while(j--);
 169   2          };
 170   1      }
 171          
 172          void delay(unsigned int t) //延时
 173          {       
 174   1          unsigned int i, j; 
 175   1          for(i=0;i<t;i++)
 176   1        { 
 177   2            for(j=0;j<10;j++)
 178   2          {;} 
C51 COMPILER V9.60.0.0   SRTT_II_MAIN1                                                     07/05/2022 17:20:33 PAGE 4   

 179   2          } 
 180   1      } 
 181          
 182          uint Adc(unsigned char n)
 183          {
 184   1        unsigned char i;  
 185   1        uint result=0;
 186   1      
 187   1        ADC_CONTR = ADC_CONTR|0x80;
 188   1        delay(10);
 189   1        i = 0x01<<n;
 190   1          P1M0 = P1M0|i;
 191   1          P1M1 = P1M1|i;
 192   1          delay(10); 
 193   1          ADC_CONTR = 0xE0|n;
 194   1          delay(10);
 195   1        ADC_DATA = 0;
 196   1        ADC_LOW2 = 0;
 197   1        ADC_CONTR = ADC_CONTR|0x08;
 198   1        delay(10);
 199   1          ADC_CONTR = ADC_CONTR&0xE7;
 200   1        result = ADC_DATA;
 201   1        result<<=2;
 202   1        result = result&0x03FC;
 203   1        result = result|(ADC_LOW2 & 0x03);
 204   1        return(result);
 205   1      }
 206          
 207          
 208          void cominit(void)
 209          {
 210   1        SCON=0X50;
 211   1        TMOD=0X20;
 212   1        TH1=0xfd;
 213   1        TL1=0xfd;
 214   1        TR1=1;
 215   1        //ES=1;
 216   1        //EA=1;
 217   1      }
 218          
 219          uint Adc6(void)
 220          {
 221   1        uint i,j,k;
 222   1        uint result=0;
 223   1        uint Tmin=0x3ff,Tmax=0;
 224   1        ulong T_tatol=0;
 225   1        uint temp1;
 226   1          uint comp;
 227   1      
 228   1        k=0;
 229   1          j=0;
 230   1          overflag=1;
 231   1      
 232   1          comp=3;// AdcMem; //值保存
 233   1      
 234   1          for(i=0;i<1000;i++)
 235   1        {
 236   2              temp1=Adc(2);// AdcMem; //值保存
 237   2          if(temp1<comp)
 238   2          {
 239   3            result=Adc(1);// AdcMem; //值保存
 240   3                  temp1=Adc(2);// AdcMem; //值保存
C51 COMPILER V9.60.0.0   SRTT_II_MAIN1                                                     07/05/2022 17:20:33 PAGE 5   

 241   3            if(temp1>comp)
 242   3              continue;
 243   3          }
 244   2          else
 245   2              { 
 246   3                  j++;
 247   3                  if(j>900)
 248   3                      return 0;
 249   3            continue;
 250   3              }
 251   2          k++;
 252   2          if(Tmin>result)
 253   2            Tmin=result;
 254   2          if(Tmax<result)
 255   2            Tmax=result;
 256   2          T_tatol=T_tatol+result;
 257   2        
 258   2          if(k==21)  
 259   2          {
 260   3            T_tatol=T_tatol-Tmin;
 261   3            T_tatol=T_tatol-Tmax;
 262   3            T_tatol>>=2;
 263   3                  overflag=0;
 264   3            return((uint)T_tatol);
 265   3          }
 266   2        }
 267   1        return 0;
 268   1      }
 269          
 270          
 271          //void disptempC(uchar data1)
 272          //{
 273          //    tempAdc = data1%0x000A;
 274          //    lcd_data[0] = word_storeroom[tempAdc];
 275          //    data1 = data1/0x000A;
 276          //    tempAdc = data1%0x000A;
 277          //    lcd_data[1] = word_storeroom[tempAdc];
 278          //    data1 = data1/0x000A;
 279          //    tempAdc = data1%0x000A;
 280          //    lcd_data[2] = word_storeroom[tempAdc];
 281          //
 282          //    //显示BCD码
 283          //      DispOneChar(4,0,lcd_data[2]);
 284          //    DispOneChar(5,0,'.');
 285          //    DispOneChar(6,0,lcd_data[1]);
 286          //    DispOneChar(7,0,lcd_data[0]);
 287          //}
 288          void send(uchar i)
 289          {
 290   1        TI=0;
 291   1        SBUF=i;
 292   1        while(TI==0);
 293   1        TI=0;
 294   1      
 295   1      }
 296          
 297          
 298          
 299          void dispint(uint data1)
 300          {
 301   1       uint tempAdc;
 302   1          tempAdc = data1%0x000A;
C51 COMPILER V9.60.0.0   SRTT_II_MAIN1                                                     07/05/2022 17:20:33 PAGE 6   

 303   1          lcd_data[0] = word_storeroom[tempAdc];
 304   1          data1 = data1/0x000A;
 305   1          tempAdc = data1%0x000A;
 306   1          lcd_data[1] = word_storeroom[tempAdc];
 307   1          data1 = data1/0x000A;
 308   1          tempAdc = data1%0x000A;
 309   1          lcd_data[2] = word_storeroom[tempAdc];
 310   1      
 311   1          //显示BCD码
 312   1            DispOneChar(4,1,lcd_data[2]);
 313   1          DispOneChar(5,1,'.');
 314   1          DispOneChar(6,1,lcd_data[1]);
 315   1          DispOneChar(7,1,lcd_data[0]);
 316   1      }
 317          
 318          
 319          void dispchar(uint data1)
 320          {
 321   1              uchar tempAdc;
 322   1          tempAdc = data1%0x000A;
 323   1          lcd_data[0] = word_storeroom[tempAdc];
 324   1          data1 = data1/0x000A;
 325   1          tempAdc = data1%0x000A;
 326   1          lcd_data[1] = word_storeroom[tempAdc];
 327   1          data1 = data1/0x000A;
 328   1          tempAdc = data1%0x000A;
 329   1          lcd_data[2] = word_storeroom[tempAdc];
 330   1          data1 = data1/0x000A;
 331   1          tempAdc = data1%0x000A;
 332   1          lcd_data[3] = word_storeroom[tempAdc];
 333   1      
 334   1          //显示BCD码
 335   1            DispOneChar(4,1,lcd_data[3]);
 336   1          DispOneChar(5,1,lcd_data[2]);
 337   1          DispOneChar(6,1,lcd_data[1]);
 338   1          DispOneChar(7,1,lcd_data[0]);
 339   1      }
 340          
 341          /* 关闭 ISP,IAP 功能 */
 342          void ISP_IAP_disable(void)
 343          {
 344   1        ISP_CONTR = 0;  /* 0111,1111 */
 345   1        ISP_CMD = 0;
 346   1        ISP_TRIG  = 0;
 347   1      //  EA      =   1;                  /* 开中断 */
 348   1      }
 349          /* 字节读 */
 350          uchar byte_read(uint byte_addr)
 351          {
 352   1        uchar tmp=0;
 353   1      
 354   1        ISP_CONTR   = ENABLE_ISP;
 355   1        ISP_CMD   = ISP_IAP_BYTE_READ;        /* 1111,1000 */
 356   1        ISP_ADDRH = (uchar)(byte_addr >> 8);
 357   1        ISP_ADDRL = (uchar)(byte_addr & 0x00ff);
 358   1      
 359   1      
 360   1        ISP_TRIG  = 0x46;
 361   1        ISP_TRIG  = 0xb9;
 362   1        _nop_();
 363   1        tmp=ISP_DATA;
 364   1        ISP_IAP_disable();
C51 COMPILER V9.60.0.0   SRTT_II_MAIN1                                                     07/05/2022 17:20:33 PAGE 7   

 365   1        return (tmp);
 366   1      }
 367          /* 扇区擦除 */
 368          uchar sector_erase(uint sector_addr)
 369          {
 370   1        ISP_CONTR   =  ENABLE_ISP;
 371   1        ISP_CMD = ISP_IAP_SECTOR_ERASE;
 372   1      
 373   1        ISP_ADDRH = (uchar)(sector_addr >> 8);
 374   1        ISP_ADDRL = (uchar)(sector_addr & 0x00ff);
 375   1      
 376   1        ISP_TRIG  = 0x46;        /* 触发ISP_IAP命令 */
 377   1        ISP_TRIG  = 0xb9;        /* 触发ISP_IAP命令 */
 378   1         _nop_();
 379   1      
 380   1        ISP_IAP_disable();
 381   1        return OK;
 382   1      }
 383          
 384          /* 字节编程 */
 385          uchar byte_program(uint byte_addr, uchar original_data)
 386          {
 387   1        ISP_CONTR   =  ENABLE_ISP;
 388   1        ISP_CMD   = ISP_IAP_BYTE_PROGRAM;
 389   1        ISP_ADDRH = (uchar)(byte_addr >> 8);
 390   1        ISP_ADDRL = (uchar)(byte_addr & 0x00ff);
 391   1        ISP_DATA  = original_data;
 392   1      
 393   1        ISP_TRIG  = 0x46;        /* 触发ISP_IAP命令 */
 394   1        ISP_TRIG  = 0xb9;        /* 触发ISP_IAP命令 */
 395   1        _nop_();
 396   1      
 397   1        ISP_IAP_disable();
 398   1        return  OK;
 399   1      }
 400          
 401          
 402          main()
 403          { 
 404   1          uint tmp=0;
 405   1          uint i;
 406   1        uint tmp_alarm;
 407   1          char code *number1="www.zju.edu.cn  ";
 408   1        char code *number6="edu.cn  ";
 409   1          char code *number2="         Ver2.71";
 410   1          char code *number3="Voltage: ";
 411   1       
 412   1      
 413   1          LcdReset();
 414   1        Delay400Ms();
 415   1        cominit();  
 416   1      
 417   1      // Display "www.zju.edu.cn"
 418   1          for(i=0;i<16;i++)
 419   1            {
 420   2                DispOneChar(i,0,*(number1+i));
 421   2                DispOneChar(i,1,*(number6+i));
 422   2            }
 423   1          Delay400Ms();
 424   1            Delay400Ms();
 425   1            Delay400Ms();
 426   1            Delay400Ms();
C51 COMPILER V9.60.0.0   SRTT_II_MAIN1                                                     07/05/2022 17:20:33 PAGE 8   

 427   1            Delay400Ms();
 428   1            Delay400Ms();
 429   1            Delay400Ms();
 430   1            Delay400Ms();
 431   1            Delay400Ms();
 432   1            Delay400Ms();
 433   1          Delay400Ms();
 434   1            Delay400Ms();
 435   1            Delay400Ms();
 436   1            Delay400Ms();
 437   1            Delay400Ms();
 438   1            Delay400Ms();
 439   1            Delay400Ms();
 440   1            Delay400Ms();
 441   1            Delay400Ms();
 442   1            Delay400Ms();
 443   1          Delay400Ms();
 444   1            Delay400Ms();
 445   1            Delay400Ms();
 446   1            Delay400Ms();
 447   1            Delay400Ms();
 448   1            Delay400Ms();
 449   1            Delay400Ms();
 450   1            Delay400Ms();
 451   1            Delay400Ms();
 452   1            Delay400Ms();
 453   1          Delay400Ms();
 454   1            Delay400Ms();
 455   1            Delay400Ms();
 456   1            Delay400Ms();
 457   1            Delay400Ms();
 458   1            Delay400Ms();
 459   1            Delay400Ms();
 460   1            Delay400Ms();
 461   1            Delay400Ms();
 462   1            Delay400Ms();
 463   1      
 464   1          //平移
 465   1          for(i=0;i<16;i++)
 466   1            {
 467   2                DispOneChar(i,0,*(number1+i));
 468   2                DispOneChar(i,1,*(number2+i));
 469   2            }
 470   1            for(i=0;i<8;i++)
 471   1            {
 472   2                LcdWriteCommand( 0x18, 1);            //平移
 473   2                Delay400Ms();
 474   2                Delay400Ms();
 475   2                Delay400Ms();
 476   2            }
 477   1      
 478   1            Delay400Ms();
 479   1            Delay400Ms();
 480   1            Delay400Ms();
 481   1            Delay400Ms();
 482   1            Delay400Ms();
 483   1            Delay400Ms();
 484   1            Delay400Ms();
 485   1            Delay400Ms();
 486   1            Delay400Ms();
 487   1            Delay400Ms();
 488   1            LcdWriteCommand( 0x02, 1);            // 显示开及光标设置
C51 COMPILER V9.60.0.0   SRTT_II_MAIN1                                                     07/05/2022 17:20:33 PAGE 9   

 489   1      
 490   1      // clear Display
 491   1      
 492   1        for(i=0;i<8;i++)
 493   1          {
 494   2              DispOneChar(i,0,' ');
 495   2              DispOneChar(i,1,' ');
 496   2          }
 497   1      
 498   1        for(;;) 
 499   1         {
 500   2          for(i=0;i<8;i++)
 501   2            {
 502   3                DispOneChar(i,0,*(number3+i));
 503   3            }
 504   2      
 505   2           tmp_alarm=Adc(7);
 506   2           dispchar(tmp_alarm);
 507   2      
 508   2         }
 509   1      
 510   1      } //end_main


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1342    ----
   CONSTANT SIZE    =     53    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     16      35
   IDATA SIZE       =     16    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
