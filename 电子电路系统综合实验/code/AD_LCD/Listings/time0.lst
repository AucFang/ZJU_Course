C51 COMPILER V9.60.0.0   TIME0                                                             07/06/2022 19:33:04 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE TIME0
OBJECT MODULE PLACED IN .\Objects\time0.obj
COMPILER INVOKED BY: D:\software\Keil_v5\C51\BIN\C51.EXE time0.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Lis
                    -tings\time0.lst) TABS(2) OBJECT(.\Objects\time0.obj)

line level    source

   1          #include <reg52.h>
   2          #include <intrins.h>              
   3          
   4          #define uchar unsigned char
   5          #define uint unsigned int
   6          
   7          //Declare SFR associated with the ADC
   8          sfr AUXR      = 0x8e;
   9          sfr ADC_CONTR = 0xC5;
  10          sfr ADC_DATA  = 0xC6;
  11          sfr ADC_LOW2  = 0xBE;
  12          sfr P1M0      = 0x91;
  13          sfr P1M1      = 0x92;
  14          
  15          //Define ADC operation const for ADC_CONTR
  16          #define ADC_POWER   0x80
  17          #define ADC_FLAG    0x10    
  18          #define ADC_START   0x08
  19          #define ADC_SPEEDLL 0x00    //00
  20          #define ADC_SPEEDL  0x20    //01
  21          #define ADC_SPEEDH  0x40    //10
  22          #define ADC_SPEEDHH 0x60    //11
  23          
  24          //定义引脚
  25          sbit RED = P1^0;
  26          sbit GREEN = P1^1;
  27          sbit BLUE = P1^2;
  28          sbit D3 = P1^4;
  29          sbit BEEP = P1^7;
  30          sbit LCD1602_RS = P3^2;         //1602的数据/指令选择控制线
  31          sbit LCD1602_RW = P3^3;
  32          sbit LCD1602_E  = P3^4;         //1602的使能控制线
  33          #define LCD1602_DB P2            //数据端口  D0~D7
  34          
  35          //全局变量
  36          uint check_data = 0;
  37          uint light_data = 0;
  38          uint MODEL = 0;   //命令的几种模式，初始为自动转换8色
  39          uint mod = 9;       //1-9
  40          unsigned char R_OUT=0,G_OUT=0,B_OUT=0; //定义占空比计数变量
  41          unsigned int MAX=200,MIN=1;           //定义变色起始级数，范围最大可以0-255
  42          unsigned char T0RH=0,T0RL=0;         //定时器中间变量
  43          bit time_flag0=0;       //每10ms刷新一次占空比
  44          bit time_flag1=0;       //每2ms输出PWM
  45          bit r_flag; //receive标志
  46          uchar order;
  47          uint clock;
  48          uint enable_clock = 0;
  49          uint clock_flag;//开灯或关灯
  50          uint enable_light = 0;
  51          uint min_count = 0;
  52          uint tmr2 = 0;
  53          uint index = 0;
  54          
C51 COMPILER V9.60.0.0   TIME0                                                             07/06/2022 19:33:04 PAGE 2   

  55          void configtime0(unsigned int ms);   //定时器0配置
  56          void ConfigPWM(unsigned char t);     //PWM占空比处理函数
  57          void POUT();                         //PWM输出函数 
  58          void InitADC();                      //ADC初始化
  59          void InitUart();                     //串口初始化
  60          void LCD1602_Init();
  61          void Delay_ms(unsigned int nms);
  62          void delay(unsigned int t);
  63          void LcdWaitReady();
  64          void LCD1602_write_cmd(unsigned char cmd);
  65          void LCD1602_write_data(unsigned char date);
  66          void LCD1602_Clear();//清屏
  67          void LCD1602_SetCursor(unsigned char x,unsigned char y);  //设置光标初始位置
  68          void LCD1602_ShowChar(unsigned char xpos,unsigned char ypos,unsigned char xsz);
  69          void LCD1602_ShowStr(unsigned char xpos,unsigned char ypos,unsigned char *p);
  70          void LCD1602_ShowNum(char x, char y, unsigned int num);
  71          uint Adc(unsigned char n);
  72          void check(uint data1);
  73          void send(uchar i);
  74          void judge_order();
  75          void LED_check();
  76          void LED_change();
  77          
  78          void main()
  79          {
  80   1          InitUart();//定时器1 波特率9600
  81   1         // InitADC();//ADC端口模式初始化
  82   1          LCD1602_Init();//LCD初始化
  83   1          configtime0(1);//定时器0 1ms
  84   1      
  85   1          RED = 0;
  86   1          GREEN = 0;
  87   1          BLUE = 0;
  88   1          BEEP = 1;
  89   1          D3 = 0;
  90   1          min_count = 0;
  91   1          tmr2 = 0;
  92   1          index = 0;
  93   1          MODEL=0;
  94   1          AUXR |= 0x10;   //AD中断允许
  95   1          IE = 0xBA;  
  96   1          EA = 1;     //开启全局中断允许
  97   1          Delay_ms(500);
  98   1      
  99   1          LED_check();//故障检测
 100   1      
 101   1          RED = 0;
 102   1          GREEN = 0;
 103   1          BLUE = 0;
 104   1          Delay_ms(100);
 105   1      
 106   1          while (1)
 107   1          {
 108   2              //光敏AD检测和LCD输出
 109   2              //light_data=Adc(6);
 110   2              LCD1602_ShowStr(0,1,"Light:");
 111   2              LCD1602_ShowNum(7,1,light_data);
 112   2      
 113   2              //判断蓝牙是否接收到数据
 114   2              if(r_flag) //如果有数据则进入这个语句
 115   2        {
 116   3          LCD1602_ShowChar(0,0,order);
C51 COMPILER V9.60.0.0   TIME0                                                             07/06/2022 19:33:04 PAGE 3   

 117   3                      judge_order();
 118   3          r_flag=0;
 119   3        }
 120   2              else
 121   2              {
 122   3                      ;
 123   3              }
 124   2      
 125   2              //执行
 126   2              if(MODEL == 0)//固定灯效
 127   2              {
 128   3                      LED_change();
 129   3              }
 130   2              else if(MODEL == 1 || MODEL == 2 || MODEL == 3)
 131   2              {
 132   3                      if(time_flag1 == 1)//2ms执行PWM控制
 133   3                      {
 134   4                              time_flag1 = 0;
 135   4                              POUT();
 136   4                      }
 137   3              }
 138   2              else if(MODEL == 4)
 139   2              {
 140   3                      //clock = order & 0x0F;
 141   3          //enable_clock = 1;//开定时
 142   3                      if(min_count >= clock)
 143   3                      {
 144   4                              MODEL = 0;                        
 145   4                      }
 146   3              }
 147   2              else if(MODEL == 5)
 148   2              {
 149   3                      //clock = order & 0x0F;
 150   3          //enable_clock = 0;//关定时
 151   3                      LED_change();
 152   3                      if(min_count >= clock)
 153   3                      {
 154   4                              RED = 0;
 155   4                              GREEN = 0;
 156   4                              BLUE = 0;
 157   4                      }
 158   3              }
 159   2              else if(MODEL == 6)
 160   2              {
 161   3                      //enable_light = 1;//开光敏
 162   3                      if(light_data <= 400)
 163   3                      {
 164   4                              LED_change();
 165   4                      }
 166   3                      else
 167   3                      {
 168   4                              RED = 0;
 169   4                              GREEN = 0;
 170   4                              BLUE = 0;
 171   4                      }
 172   3              }
 173   2          }
 174   1      }
 175          
 176          // void InitADC()
 177          // {
 178          //         P1M0 = 0x48;
C51 COMPILER V9.60.0.0   TIME0                                                             07/06/2022 19:33:04 PAGE 4   

 179          //         P1M1 = 0x4F;
 180          //         ADC_DATA = 0;
 181          //         ADC_LOW2 = 0;
 182          //         ADC_CONTR = 0x60 | 3;   //设置在check口，转换速度最高
 183          //         delay(10);
 184          // }
 185          
 186          //定时器1（串口）
 187          void InitUart()
 188          {
 189   1          SCON = 0x5a;  //设置串口为8位可变波特率  9600
 190   1          TMOD = 0x20;
 191   1          TH1 = TL1 = 0xFD; 
 192   1          TI = 1; 
 193   1          TR1 = 1;
 194   1          ES = 1;
 195   1      }
 196          
 197          void LCD1602_Init()    //1602初始化函数 
 198          {
 199   1          LCD1602_write_cmd(0x01);    //显示清屏
 200   1          LCD1602_write_cmd(0x38);    //显示模式设置
 201   1          LCD1602_write_cmd(0x0C);    //显示开及光标设置
 202   1          LCD1602_write_cmd(0x06);    //显示光标移动位置
 203   1      }
 204          
 205          /******************故障检测****************/
 206          void LED_check()
 207          {
 208   1              //判断蓝灯通断
 209   1              RED = 0;
 210   1              GREEN = 0;
 211   1              BLUE = 1;
 212   1              Delay_ms(500);
 213   1              //check_data=Adc(3);
 214   1              //check(check_data);
 215   1      
 216   1              //判断红灯通断
 217   1              RED = 1;
 218   1              GREEN = 0;
 219   1              BLUE = 0;
 220   1              Delay_ms(500);
 221   1              //check_data=Adc(3);
 222   1              //check(check_data);
 223   1              
 224   1              //判断绿灯通断
 225   1              RED = 0;
 226   1              GREEN = 1;
 227   1              BLUE = 0;
 228   1              Delay_ms(500);
 229   1              //check_data=Adc(3);
 230   1              //check(check_data);
 231   1      }
 232          
 233          void judge_order()
 234          {
 235   1        MODEL = (order & 0xF0) >> 4;
 236   1              if(MODEL == 0)
 237   1              {
 238   2                      mod = order & 0x0F;
 239   2                      if(mod <= 8)
 240   2                      {
C51 COMPILER V9.60.0.0   TIME0                                                             07/06/2022 19:33:04 PAGE 5   

 241   3                              index = mod - 1;
 242   3                      }
 243   2                      else if(mod == 9)
 244   2                      {
 245   3                              index = 0;
 246   3                      }
 247   2              }
 248   1              else if(MODEL == 1)
 249   1              {
 250   2                      R_OUT = order & 0x0F;
 251   2              }
 252   1              else if(MODEL == 2)
 253   1              {
 254   2                      G_OUT = order & 0x0F;
 255   2              }
 256   1              else if(MODEL == 3)
 257   1              {
 258   2                      B_OUT = order & 0x0F;
 259   2              }
 260   1              else if(MODEL == 4)
 261   1              {
 262   2                      clock = order & 0x0F;
 263   2                      min_count = 0;
 264   2                      tmr2 = 0;
 265   2                      clock_flag = 1;
 266   2              }
 267   1              else if(MODEL == 5)
 268   1              {
 269   2                      clock = order & 0x0F;
 270   2                      min_count = 0;
 271   2                      tmr2 = 0;
 272   2                      clock_flag = 0;
 273   2              }
 274   1              else if(MODEL == 6)
 275   1              {
 276   2                      ;//开光敏
 277   2              }
 278   1              else
 279   1              {
 280   2                      MODEL = 0;//debug
 281   2              }
 282   1      
 283   1      }
 284          
 285          void LED_change()
 286          {
 287   1              if(time_flag0 == 1)//10ms更新PWM占空比
 288   1              {
 289   2                      time_flag0 = 0;
 290   2                      ConfigPWM(1);
 291   2              }
 292   1              if(time_flag1 == 1)//2ms执行PWM控制
 293   1              {
 294   2                      time_flag1 = 0;
 295   2                      POUT();
 296   2              }
 297   1      }
 298          
 299          //定时器0配置
 300          void configtime0(unsigned int ms)
 301          {
 302   1              unsigned long tmp;
C51 COMPILER V9.60.0.0   TIME0                                                             07/06/2022 19:33:04 PAGE 6   

 303   1              // AUXR|=0x80;
 304   1              // tmp=11059200/12;  // 频率
 305   1              // tmp=tmp*ms/1000;  //需要多少个机器周期
 306   1              // tmp=65536-tmp;
 307   1              // T0RH=(unsigned char)(tmp>>8);
 308   1              // T0RL=(unsigned char)tmp;
 309   1              TH0=0xFC;
 310   1              TL0=0x67;
 311   1              TMOD&=0xf0;
 312   1              TMOD|=0x01;
 313   1              TR0=1;
 314   1              ET0=1;
 315   1      }
*** WARNING C280 IN LINE 300 OF time0.c: 'ms': unreferenced local variable
*** WARNING C280 IN LINE 302 OF time0.c: 'tmp': unreferenced local variable
 316          
 317          //定时器0中断涵数
 318          void timer0() interrupt 1   //1ms中断
 319          {
 320   1              static unsigned int tmr0;
 321   1              static unsigned int tmr1;
 322   1              TH0=0xFC;
 323   1              TL0=0x67;
 324   1      
 325   1              D3 = 1;
 326   1      
 327   1              tmr0++;
 328   1              tmr1++;
 329   1              tmr2++;
 330   1              if(tmr0>=10)  //每10ms刷新一次占空比
 331   1              {
 332   2                      tmr0=0;
 333   2                      time_flag0=1;
 334   2              }
 335   1              if(tmr1>=2)  //2ms输出PWM
 336   1              {
 337   2                      tmr1=0;
 338   2                      time_flag1=1;
 339   2              }
 340   1              if(tmr2>=60000)//计时（分钟）
 341   1              {
 342   2                      min_count++;
 343   2                      tmr2 = 0;
 344   2                      if(min_count >=17)
 345   2                      {
 346   3                              min_count = 0;
 347   3                      }
 348   2              }
 349   1      }
 350          
 351          
 352          void LcdWaitReady()    /* 等待液晶准备好 */
 353          {
 354   1          unsigned char sta;
 355   1          
 356   1          LCD1602_DB = 0xFF;
 357   1          LCD1602_RS = 0;
 358   1          LCD1602_RW = 1;       //读状态
 359   1          do {
 360   2              LCD1602_E = 1;
 361   2              sta = LCD1602_DB; //读取状态字
 362   2              LCD1602_E = 0;
C51 COMPILER V9.60.0.0   TIME0                                                             07/06/2022 19:33:04 PAGE 7   

 363   2          } while (sta & 0x80); //bit7等于1表示液晶正忙，重复检测直到其等于0为止
 364   1      }
 365          
 366          void Delay_ms(unsigned int nms)        //@11.0592MHz   nms为要延时的ms数  
 367          {
 368   1          unsigned char i, j;    
 369   1          while(nms--)
 370   1          {
 371   2              i = 15;
 372   2              j = 90;
 373   2              do
 374   2              {
 375   3                  while (--j);
 376   3              } while (--i);
 377   2          }
 378   1      }
 379          
 380          void delay(unsigned int t) //延时
 381          {       
 382   1          unsigned int i, j; 
 383   1          for(i=0;i<t;i++)
 384   1        { 
 385   2            for(j=0;j<10;j++)
 386   2          {;} 
 387   2          } 
 388   1      } 
 389          
 390          void LCD1602_write_cmd(unsigned char cmd)    //写命令函数
 391          {
 392   1          LcdWaitReady();
 393   1          LCD1602_RS = 0;
 394   1          LCD1602_RW = 0;
 395   1          LCD1602_DB = cmd;
 396   1          LCD1602_E  = 1;
 397   1          Delay_ms(10);
 398   1          LCD1602_E  = 0;
 399   1      }
 400          
 401          void LCD1602_write_data(unsigned char date)    //写数据函数 
 402          {
 403   1          LcdWaitReady();
 404   1          LCD1602_RS = 1;
 405   1          LCD1602_RW = 0;
 406   1          LCD1602_DB = date;
 407   1          LCD1602_E  = 1;
 408   1          Delay_ms(10);
 409   1          LCD1602_E  = 0;
 410   1      }
 411          
 412          void LCD1602_Clear()    //1602清屏函数
 413          {
 414   1          LCD1602_write_cmd(0x01);
 415   1      }
 416          
 417          void LCD1602_SetCursor(unsigned char x,unsigned char y)//设置1602光标位置函数
 418          {
 419   1          unsigned char addr;
 420   1          if(y==0)     //由输入的屏幕坐标计算显示RAM的地址
 421   1              addr=0x00+x;
 422   1          else
 423   1              addr=0x40+x;
 424   1          LCD1602_write_cmd(addr | 0x80);//设置RAM地址
C51 COMPILER V9.60.0.0   TIME0                                                             07/06/2022 19:33:04 PAGE 8   

 425   1      }
 426          
 427          void LCD1602_ShowNum(char x, char y, unsigned int num)  //指定位置显示数字函数
 428          {
 429   1          unsigned int i,j,k,l,n;
 430   1          i=num/10000;
 431   1          j=(num-10000*i)/1000;
 432   1          k=(num-10000*i-1000*j)/100;
 433   1          l=(num-10000*i-1000*j-100*k)/10;
 434   1          n=num%10;
 435   1          LCD1602_SetCursor(x,y);  //设置起始地址
 436   1          if(i!=0)LCD1602_write_data(i+0x30);
 437   1          if((i!=0)||(j!=0))LCD1602_write_data(j+0x30);
 438   1          if((i!=0)||(j!=0)||(k!=0))LCD1602_write_data(k+0x30);
 439   1          if((i!=0)||(j!=0)||(k!=0)||(l!=0))LCD1602_write_data(l+0x30);
 440   1          LCD1602_write_data(n+0x30);
 441   1      }
 442          
 443          void LCD1602_ShowChar(unsigned char xpos,unsigned char ypos,char xsz)    //指定位置显示字符函数
 444          {
 445   1          ypos%=2;
 446   1          if(ypos==0)
 447   1          {
 448   2              LCD1602_write_cmd(0x80+xpos);
 449   2          }
 450   1          else
 451   1          {
 452   2              LCD1602_write_cmd(0x80+0x40+xpos);
 453   2          }
 454   1          LCD1602_write_data(xsz);
 455   1      }
 456          
 457          void LCD1602_ShowStr(unsigned char xpos,unsigned char ypos,char *p) //指定位置显示字符串函数
 458          {
 459   1          if(ypos>1)return;
 460   1          while(*p!='\0')
 461   1          {
 462   2              LCD1602_ShowChar(xpos++,ypos,*p++);
 463   2              if(*p=='\n')
 464   2              {
 465   3                  xpos=0;
 466   3                  ypos++;
 467   3                  p++;
 468   3              }
 469   2          }
 470   1      }
 471          
 472          uint Adc(unsigned char n)//采集第几通道的数据
 473          {
 474   1        unsigned char i;  
 475   1        uint result=0;
 476   1      
 477   1        ADC_CONTR = ADC_CONTR|0x80;  //10000000 开启转换电源
 478   1        delay(10);
 479   1        i = 0x01<<n;
 480   1              P1M0 = P1M0|i;
 481   1          P1M1 = P1M1|i;   //采样的通道开漏
 482   1              delay(10); 
 483   1              ADC_CONTR = 0xE0|n;   //打开adc电源,设置转换速率 设置P1.n模拟通道  1110_0000|n
 484   1              delay(10);    //延时一端时间，使输入电压达到稳定
 485   1        ADC_DATA = 0;   
 486   1        ADC_LOW2 = 0; //清A/D转换结果寄存器
C51 COMPILER V9.60.0.0   TIME0                                                             07/06/2022 19:33:04 PAGE 9   

 487   1        ADC_CONTR = ADC_CONTR|0x08;  //ADC_START=1,开始转换   0000_1000
 488   1        delay(10);
 489   1              ADC_CONTR = ADC_CONTR&0xE7;  //将ADC_FLAG软件清零   1110_0111  
 490   1        result = ADC_DATA;
 491   1        result<<=2;
 492   1        result = result&0x03FC;   //0000_0011_1111_1100
 493   1        result = result|(ADC_LOW2 & 0x03);
 494   1        return(result);       //10位的结果
 495   1      }
 496          
 497          void check(uint data1)
 498          {
 499   1          if(data1 < 15)
 500   1          {
 501   2              EA = 0;//关闭全局中断
 502   2              //蓝牙发送报警
 503   2              while(1)
 504   2              {
 505   3                  LCD1602_ShowStr(15,1,"!");  //LCD显示感叹号
 506   3                  D3 = 1;                     //灯闪烁，蜂鸣器间歇性报警
 507   3                  BEEP = 1;
 508   3                  delay(40000);
 509   3                  D3 = 0;
 510   3                  BEEP = 0;
 511   3                  delay(40000);
 512   3              }
 513   2          }
 514   1          else EA = 1;
 515   1      }
 516          
 517          void send(uchar i)
 518          {
 519   1        TI=0;
 520   1        SBUF=i;
 521   1        while(TI==0);
 522   1        TI=0;
 523   1      }
 524          
 525          //每调用一次此涵数，PWM占空比加一
 526          void ConfigPWM(unsigned char t)  //PWM占空比处理函数
 527          {
 528   1              static unsigned char dir=0;    //定义变亮或变暗方向
 529   1              static unsigned int time=0;    //中间变量
 530   1      
 531   1              switch(index)
 532   1              {
 533   2          case 0: 
 534   2                              if(dir==0)      //红色由暗变亮
 535   2                              {
 536   3                                      time+=t;
 537   3                                      R_OUT=time;
 538   3                                      G_OUT=0;
 539   3                                      B_OUT=0;
 540   3                                      if(time>=MAX)
 541   3                                      {
 542   4                                              dir=1;
 543   4                                      }
 544   3                              }
 545   2                              else         //红色由亮变暗
 546   2                              {
 547   3                                      time-=t;
 548   3                                      R_OUT=time;
C51 COMPILER V9.60.0.0   TIME0                                                             07/06/2022 19:33:04 PAGE 10  

 549   3                                      G_OUT=0;
 550   3                                      B_OUT=0;
 551   3                                      if(time<=MIN)
 552   3                                      {
 553   4                                              dir=0;
 554   4                                              time=0;
 555   4                                              if(mod == 1)
 556   4                                              {
 557   5                                                      index = 0;
 558   5                                              }
 559   4                                              else if(mod == 9)
 560   4                                              {
 561   5                                                      index = 1;
 562   5                                              }
 563   4                                              else
 564   4                                              {
 565   5                                                      index = 7;
 566   5                                              }
 567   4                                      }
 568   3                              }
 569   2                              break;
 570   2                                             
 571   2                      case 1:            
 572   2                              if(dir==0)                //橙色由暗变亮
 573   2                              {
 574   3                                      time+=t;
 575   3                                      R_OUT=time;
 576   3              G_OUT=time/2;
 577   3                                      B_OUT=0;
 578   3                                      if(time>=MAX)
 579   3                                      {
 580   4                                              dir=1;
 581   4                                      }
 582   3                              }
 583   2                              else                        //橙色由亮变暗
 584   2                              {
 585   3                                      time-=t;
 586   3                                      R_OUT=time;
 587   3              G_OUT=time/2;
 588   3                                      B_OUT=0;
 589   3                                      if(time<=MIN)
 590   3                                      {
 591   4                                              dir=0;
 592   4                                              time=0;
 593   4                                              if(mod == 2)
 594   4                                              {
 595   5                                                      index = 1;
 596   5                                              }
 597   4                                              else if(mod == 9)
 598   4                                              {
 599   5                                                      index = 2;
 600   5                                              }
 601   4                                              else
 602   4                                              {
 603   5                                                      index = 7;
 604   5                                              }
 605   4                                      }
 606   3                              }
 607   2                              break;
 608   2                                             
 609   2                      case 2:            
 610   2                              if(dir==0)                //黄色由暗变亮
C51 COMPILER V9.60.0.0   TIME0                                                             07/06/2022 19:33:04 PAGE 11  

 611   2                              {
 612   3                                      time+=t;
 613   3                                      R_OUT=time;
 614   3                                      G_OUT=time;
 615   3                                      B_OUT=0;
 616   3                                      if(time>=MAX)
 617   3                                      {
 618   4                                              dir=1;
 619   4                                      }
 620   3                              }
 621   2                              else                        //黄色由亮变暗
 622   2                              {
 623   3                                      time-=t;
 624   3                                      R_OUT=time;
 625   3                                      G_OUT=time;
 626   3                                      B_OUT=0;
 627   3                                      if(time<=MIN)
 628   3                                      {
 629   4                                              dir=0;
 630   4                                              time=0;
 631   4                                              if(mod == 3)
 632   4                                              {
 633   5                                                      index = 2;
 634   5                                              }
 635   4                                              else if(mod == 9)
 636   4                                              {
 637   5                                                      index = 3;
 638   5                                              }
 639   4                                              else
 640   4                                              {
 641   5                                                      index = 7;
 642   5                                              }
 643   4                                      }
 644   3                              }
 645   2                              break;
 646   2                                             
 647   2                      case 3:            
 648   2                              if(dir==0)                //绿色由暗变亮
 649   2                              {
 650   3                                      time+=t;
 651   3                                      R_OUT=0;
 652   3                                      G_OUT=time;
 653   3                                      B_OUT=0;
 654   3                                      if(time>=MAX)
 655   3                                      {
 656   4                                              dir=1;
 657   4                                      }
 658   3                              }
 659   2                              else                        //绿色由亮变暗
 660   2                              {
 661   3                                      time-=t;
 662   3                                      R_OUT=0;
 663   3                                      G_OUT=time;
 664   3                                      B_OUT=0;
 665   3                                      if(time<=MIN)
 666   3                                      {
 667   4                                              dir=0;
 668   4                                              time=0;
 669   4                                              if(mod == 4)
 670   4                                              {
 671   5                                                      index = 3;
 672   5                                              }
C51 COMPILER V9.60.0.0   TIME0                                                             07/06/2022 19:33:04 PAGE 12  

 673   4                                              else if(mod == 9)
 674   4                                              {
 675   5                                                      index = 4;
 676   5                                              }
 677   4                                              else
 678   4                                              {
 679   5                                                      index = 7;
 680   5                                              }
 681   4                                      }
 682   3                              }
 683   2                              break;
 684   2                                             
 685   2                      case 4:           
 686   2                              if(dir==0)                //青色由暗变亮
 687   2                              {
 688   3                                      time+=t;
 689   3                                      R_OUT=0;
 690   3                                      G_OUT=time;
 691   3                                      B_OUT=time;
 692   3                                      if(time>=MAX)
 693   3                                      {
 694   4                                              dir=1;
 695   4                                      }
 696   3                              }
 697   2                              else                        //青色由亮变暗
 698   2                              {
 699   3                                      time-=t;
 700   3                                      R_OUT=0;
 701   3                                      G_OUT=time;
 702   3                                      B_OUT=time;
 703   3                                      if(time<=MIN)
 704   3                                      {
 705   4                                              dir=0;
 706   4                                              time=0;
 707   4                                              if(mod == 5)
 708   4                                              {
 709   5                                                      index = 4;
 710   5                                              }
 711   4                                              else if(mod == 9)
 712   4                                              {
 713   5                                                      index = 5;
 714   5                                              }
 715   4                                              else
 716   4                                              {
 717   5                                                      index = 7;
 718   5                                              }
 719   4                                      }
 720   3                              }
 721   2                              break;
 722   2                                             
 723   2                      case 5:            
 724   2                              if(dir==0)                //蓝色由暗变亮
 725   2                              {
 726   3                                      time+=t;
 727   3                                      R_OUT=0;
 728   3                                      G_OUT=0;
 729   3                                      B_OUT=time;
 730   3                                      if(time>=MAX)
 731   3                                      {
 732   4                                              dir=1;
 733   4                                      }
 734   3                              }
C51 COMPILER V9.60.0.0   TIME0                                                             07/06/2022 19:33:04 PAGE 13  

 735   2                              else                        //蓝色由亮变暗
 736   2                              {
 737   3                                      time-=t;
 738   3                                      R_OUT=0;
 739   3                                      G_OUT=0;
 740   3                                      B_OUT=time;
 741   3                                      if(time<=MIN)
 742   3                                      {
 743   4                                              dir=0;
 744   4                                              time=0;
 745   4                                              if(mod == 6)
 746   4                                              {
 747   5                                                      index = 5;
 748   5                                              }
 749   4                                              else if(mod == 9)
 750   4                                              {
 751   5                                                      index = 6;
 752   5                                              }
 753   4                                              else
 754   4                                              {
 755   5                                                      index = 7;
 756   5                                              }
 757   4                                      }
 758   3                              }
 759   2                              break;
 760   2                                             
 761   2                      case 6:            
 762   2                              if(dir==0)                //紫色由暗变亮
 763   2                              {
 764   3                                      time+=t;
 765   3                                      R_OUT=time;
 766   3                                      G_OUT=0;
 767   3                                      B_OUT=time;
 768   3                                      if(time>=MAX)
 769   3                                      {
 770   4                                              dir=1;
 771   4                                      }
 772   3                              }
 773   2                              else                        //紫色由亮变暗
 774   2                              {
 775   3                                      time-=t;
 776   3                                      R_OUT=time;
 777   3                                      G_OUT=0;
 778   3                                      B_OUT=time;
 779   3                                      if(time<=MIN)
 780   3                                      {
 781   4                                              dir=0;
 782   4                                              time=0;
 783   4                                              if(mod == 7)
 784   4                                              {
 785   5                                                      index = 6;
 786   5                                              }
 787   4                                              else
 788   4                                              {
 789   5                                                      index = 7;
 790   5                                              }
 791   4                                      }
 792   3                              }
 793   2                              break;
 794   2                                             
 795   2                      case 7:            
 796   2                              if(dir==0)                //白色由暗变亮
C51 COMPILER V9.60.0.0   TIME0                                                             07/06/2022 19:33:04 PAGE 14  

 797   2                              {
 798   3                                      time+=t;
 799   3                                      G_OUT=time;
 800   3                                      B_OUT=time;
 801   3                                      R_OUT=time;
 802   3                                      if(time>=MAX)
 803   3                                      {
 804   4                                              dir=1;
 805   4                                      }
 806   3                              }
 807   2                              else                        //白色由亮变暗
 808   2                              {
 809   3                                      time-=t;
 810   3                                      G_OUT=time;
 811   3                                      B_OUT=time;
 812   3                                      R_OUT=time;
 813   3                                      if(time<=MIN)
 814   3                                      {
 815   4                                              dir=0;
 816   4                                              time=0;
 817   4                                              if(mod == 8)
 818   4                                              {
 819   5                                                      index = 7;
 820   5                                              }
 821   4                                              else if(mod == 9)
 822   4                                              {
 823   5                                                      index = 0;
 824   5                                              }
 825   4                                              else
 826   4                                              {
 827   5                                                      index = 7;
 828   5                                              }
 829   4                                      }
 830   3                              }
 831   2                              break;
 832   2                       
 833   2              }
 834   1      }
 835          
 836          //输出占空比
 837          void POUT() 
 838          {
 839   1          unsigned char cnt;  
 840   1          for(cnt=0;cnt<MAX;cnt++)
 841   1          {
 842   2              if(cnt<R_OUT)
 843   2                      RED=1;        //红色占空比大于计数值时红灯亮
 844   2              else
 845   2                      RED=0;        //否则就关闭红色
 846   2                     
 847   2              if(cnt<G_OUT)               
 848   2                      GREEN=1;                //绿色占空比大于计数值时绿灯亮
 849   2              else
 850   2                      GREEN=0;                //否则就关闭绿色
 851   2                     
 852   2              if(cnt<B_OUT)
 853   2                      BLUE=1;                //蓝色占空比大于计数值时蓝灯亮
 854   2              else
 855   2                      BLUE=0;                //否则就关闭蓝色
 856   2          }
 857   1      }
 858          
C51 COMPILER V9.60.0.0   TIME0                                                             07/06/2022 19:33:04 PAGE 15  

 859          void serial() interrupt 4//串行中断函数
 860          {
 861   1         order=SBUF;  //将收取的数据存到order
 862   1         r_flag=1;  //标志置位——表示单片机收到数据
 863   1         RI=0;   //接收标志清零
 864   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2344    ----
   CONSTANT SIZE    =      9    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     39      23
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
