C51 COMPILER V9.60.0.0   DEBUG                                                             07/07/2022 09:42:22 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE DEBUG
OBJECT MODULE PLACED IN .\Objects\debug.obj
COMPILER INVOKED BY: D:\software\Keil_v5\C51\BIN\C51.EXE debug.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Lis
                    -tings\debug.lst) TABS(2) OBJECT(.\Objects\debug.obj)

line level    source

   1          #include<reg52.h>
   2          
   3          #define uchar unsigned char
   4          #define uint unsigned int
   5          #define LCD1602_DB P2            //数据端口  D0~D7
   6          
   7          sbit R_LED=P1^0;                //红灯引脚，高电平时点亮LED
   8          sbit G_LED=P1^1;               //绿灯引脚，高电平时点亮LED
   9          sbit B_LED=P1^2;                //蓝灯引脚，高电平时点亮LED
  10          sbit LCD1602_RS = P3^2;         //1602的数据/指令选择控制线
  11          sbit LCD1602_RW = P3^3;
  12          sbit LCD1602_E  = P3^4;         //1602的使能控制线
  13          
  14          //Declare SFR associated with the ADC
  15          sfr AUXR      = 0x8e;
  16          sfr ADC_CONTR = 0xC5;
  17          sfr ADC_DATA  = 0xC6;
  18          sfr ADC_LOW2  = 0xBE;
  19          sfr P1M0      = 0x91;
  20          sfr P1M1      = 0x92;
  21          
  22          unsigned char R_OUT=0,G_OUT=0,B_OUT=0; //定义占空比计数变量
  23          unsigned int MAX=200,MIN=1;           //定义变色起始级数，范围最大可以0-255
  24          unsigned char T0RH=0,T0RL=0;         //定时器中间变量
  25          bit time_flag0=0;       //每10ms刷新一次占空比
  26          bit time_flag1=0;       //每2ms输出PWM
  27          uint count;
  28          
  29          void LedInit(void);
  30          void configtime0(unsigned int ms);   //定时器0配置
  31          void ConfigPWM(unsigned char t);     //PWM占空比处理函数
  32          void POUT();
  33          void LCD1602_Init();   
  34          void LcdWaitReady();
  35          void LCD1602_write_cmd(unsigned char cmd);
  36          void LCD1602_write_data(unsigned char date);
  37          void LCD1602_Clear();//清屏
  38          void LCD1602_SetCursor(unsigned char x,unsigned char y);  //设置光标初始位置
  39          void LCD1602_ShowChar(unsigned char xpos,unsigned char ypos,unsigned char xsz);
  40          void LCD1602_ShowStr(unsigned char xpos,unsigned char ypos,unsigned char *p);
  41          void LCD1602_ShowNum(char x, char y, unsigned int num);                         //PWM输出函数
  42          void Delay_ms(unsigned int nms);
  43          
  44          void LedInit(void)
  45          {
  46   1          P1M0 = 0x48;
  47   1        P1M1 = 0x4F;
  48   1      }
  49          
  50          main()
  51          {        
  52   1              LedInit();
  53   1              EA=1;
  54   1              count = 0;
C51 COMPILER V9.60.0.0   DEBUG                                                             07/07/2022 09:42:22 PAGE 2   

  55   1              configtime0(1);
  56   1              while(1)
  57   1              {
  58   2                  count++;
  59   2                  LCD1602_ShowNum(7,1,count);
  60   2                      if(time_flag0 == 1)
  61   2                      {
  62   3                              time_flag0 = 0;
  63   3                              ConfigPWM(1);
  64   3                      }
  65   2                      if(time_flag1 == 1)
  66   2                      {
  67   3                              time_flag1 = 0;
  68   3                              POUT();
  69   3                      }
  70   2      
  71   2              }
  72   1      }
  73          
  74          //每调用一次此涵数，PWM占空比加一
  75          void ConfigPWM(unsigned char t)  //PWM占空比处理函数
  76          {
  77   1              static unsigned char dir=0;    //定义变亮或变暗方向
  78   1              static unsigned char index=0;  //定义变色索引
  79   1              static unsigned int time=0;    //中间变量
  80   1      
  81   1              switch(index)
  82   1              {
  83   2          case 0: 
  84   2                              if(dir==0)      //红色由暗变亮
  85   2                              {
  86   3                                      time+=t;
  87   3                                      R_OUT=time;
  88   3              G_OUT=0;
  89   3                                      B_OUT=0;
  90   3                                      if(time>=MAX)
  91   3                                      {
  92   4                                              dir=1;
  93   4                                      }
  94   3                              }
  95   2                              else         //红色由亮变暗
  96   2                              {
  97   3                                      time-=t;
  98   3                                      R_OUT=time;
  99   3              G_OUT=0;
 100   3                                      B_OUT=0;
 101   3                                      if(time<=MIN)
 102   3                                      {
 103   4                                              dir=0;
 104   4                                              time=0;
 105   4                                              index=1;
 106   4                                      }
 107   3                              }
 108   2                              break;
 109   2                                             
 110   2                      case 1:            
 111   2                              if(dir==0)                //橙色由暗变亮
 112   2                              {
 113   3                                      time+=t;
 114   3                                      R_OUT=time;
 115   3              G_OUT=time/2;
 116   3                                      B_OUT=0;
C51 COMPILER V9.60.0.0   DEBUG                                                             07/07/2022 09:42:22 PAGE 3   

 117   3                                      if(time>=MAX)
 118   3                                      {
 119   4                                              dir=1;
 120   4                                      }
 121   3                              }
 122   2                              else                        //橙色由亮变暗
 123   2                              {
 124   3                                      time-=t;
 125   3                                      R_OUT=time;
 126   3              G_OUT=time/2;
 127   3                                      B_OUT=0;
 128   3                                      if(time<=MIN)
 129   3                                      {
 130   4                                              dir=0;
 131   4                                              time=0;
 132   4                                              index=2;
 133   4                                      }
 134   3                              }
 135   2                              break;
 136   2                                             
 137   2                      case 2:            
 138   2                              if(dir==0)                //黄色由暗变亮
 139   2                              {
 140   3                                      time+=t;
 141   3                                      R_OUT=time;
 142   3                                      G_OUT=time;
 143   3                                      B_OUT=0;
 144   3                                      if(time>=MAX)
 145   3                                      {
 146   4                                              dir=1;
 147   4                                      }
 148   3                              }
 149   2                              else                        //黄色由亮变暗
 150   2                              {
 151   3                                      time-=t;
 152   3                                      R_OUT=time;
 153   3                                      G_OUT=time;
 154   3                                      B_OUT=0;
 155   3                                      if(time<=MIN)
 156   3                                      {
 157   4                                              dir=0;
 158   4                                              time=0;
 159   4                                              index=3;
 160   4                                      }
 161   3                              }
 162   2                              break;
 163   2                                             
 164   2                      case 3:            
 165   2                              if(dir==0)                //绿色由暗变亮
 166   2                              {
 167   3                                      time+=t;
 168   3                                      R_OUT=0;
 169   3                                      G_OUT=time;
 170   3                                      B_OUT=0;
 171   3                                      if(time>=MAX)
 172   3                                      {
 173   4                                              dir=1;
 174   4                                      }
 175   3                              }
 176   2                              else                        //绿色由亮变暗
 177   2                              {
 178   3                                      time-=t;
C51 COMPILER V9.60.0.0   DEBUG                                                             07/07/2022 09:42:22 PAGE 4   

 179   3                                      R_OUT=0;
 180   3                                      G_OUT=time;
 181   3                                      B_OUT=0;
 182   3                                      if(time<=MIN)
 183   3                                      {
 184   4                                              dir=0;
 185   4                                              time=0;
 186   4                                              index=4;
 187   4                                      }
 188   3                              }
 189   2                              break;
 190   2                                             
 191   2                      case 4:           
 192   2                              if(dir==0)                //青色由暗变亮
 193   2                              {
 194   3                                      time+=t;
 195   3                                      R_OUT=0;
 196   3                                      G_OUT=time;
 197   3                                      B_OUT=time;
 198   3                                      if(time>=MAX)
 199   3                                      {
 200   4                                              dir=1;
 201   4                                      }
 202   3                              }
 203   2                              else                        //青色由亮变暗
 204   2                              {
 205   3                                      time-=t;
 206   3                                      R_OUT=0;
 207   3                                      G_OUT=time;
 208   3                                      B_OUT=time;
 209   3                                      if(time<=MIN)
 210   3                                      {
 211   4                                              dir=0;
 212   4                                              time=0;
 213   4                                              index=5;
 214   4                                      }
 215   3                              }
 216   2                              break;
 217   2                                             
 218   2                      case 5:            
 219   2                              if(dir==0)                //蓝色由暗变亮
 220   2                              {
 221   3                                      time+=t;
 222   3                                      R_OUT=0;
 223   3                                      G_OUT=0;
 224   3                                      B_OUT=time;
 225   3                                      if(time>=MAX)
 226   3                                      {
 227   4                                              dir=1;
 228   4                                      }
 229   3                              }
 230   2                              else                        //蓝色由亮变暗
 231   2                              {
 232   3                                      time-=t;
 233   3                                      R_OUT=0;
 234   3                                      G_OUT=0;
 235   3                                      B_OUT=time;
 236   3                                      if(time<=MIN)
 237   3                                      {
 238   4                                              dir=0;
 239   4                                              time=0;
 240   4                                              index=6;
C51 COMPILER V9.60.0.0   DEBUG                                                             07/07/2022 09:42:22 PAGE 5   

 241   4                                      }
 242   3                              }
 243   2                              break;
 244   2                                             
 245   2                      case 6:            
 246   2                              if(dir==0)                //紫色由暗变亮
 247   2                              {
 248   3                                      time+=t;
 249   3                                      R_OUT=time;
 250   3                                      G_OUT=0;
 251   3                                      B_OUT=time;
 252   3                                      if(time>=MAX)
 253   3                                      {
 254   4                                              dir=1;
 255   4                                      }
 256   3                              }
 257   2                              else                        //紫色由亮变暗
 258   2                              {
 259   3                                      time-=t;
 260   3                                      R_OUT=time;
 261   3                                      G_OUT=0;
 262   3                                      B_OUT=time;
 263   3                                      if(time<=MIN)
 264   3                                      {
 265   4                                              dir=0;
 266   4                                              time=0;
 267   4                                              index=7;
 268   4                                      }
 269   3                              }
 270   2                              break;
 271   2                                             
 272   2                      case 7:            
 273   2                              if(dir==0)                //白色由暗变亮
 274   2                              {
 275   3                                      time+=t;
 276   3                                      G_OUT=time;
 277   3                                      B_OUT=time;
 278   3                                      R_OUT=time;
 279   3                                      if(time>=MAX)
 280   3                                      {
 281   4                                              dir=1;
 282   4                                      }
 283   3                              }
 284   2                              else                        //白色由亮变暗
 285   2                              {
 286   3                                      time-=t;
 287   3                                      G_OUT=time;
 288   3                                      B_OUT=time;
 289   3                                      R_OUT=time;
 290   3                                      if(time<=MIN)
 291   3                                      {
 292   4                                              dir=0;
 293   4                                              time=0;
 294   4                                              index=0;
 295   4                                      }
 296   3                              }
 297   2                              break;
 298   2                       
 299   2              }
 300   1      }
 301          
 302          //输出占空比
C51 COMPILER V9.60.0.0   DEBUG                                                             07/07/2022 09:42:22 PAGE 6   

 303          void POUT() 
 304          {
 305   1          unsigned char cnt;
 306   1              
 307   1          for(cnt=0;cnt<MAX;cnt++)
 308   1          {
 309   2              if(cnt<R_OUT)
 310   2                      R_LED=1;        //红色占空比大于计数值时红灯亮
 311   2              else
 312   2                      R_LED=0;        //否则就关闭红色
 313   2                     
 314   2              if(cnt<G_OUT)               
 315   2                      G_LED=1;                //绿色占空比大于计数值时绿灯亮
 316   2              else
 317   2                      G_LED=0;                //否则就关闭绿色
 318   2                     
 319   2              if(cnt<B_OUT)
 320   2                      B_LED=1;                //蓝色占空比大于计数值时蓝灯亮
 321   2              else
 322   2                      B_LED=0;                //否则就关闭蓝色
 323   2          }
 324   1      }
 325          
 326          //定时器0配置
 327          void configtime0(unsigned int ms)
 328          {
 329   1              unsigned long tmp;
 330   1              tmp=11059200/12;  // 频率
 331   1              tmp=tmp*ms/1000;  //需要多少个机器周期
 332   1              tmp=65536-tmp;
 333   1              T0RH=(unsigned char)(tmp>>8);
 334   1              T0RL=(unsigned char)tmp;
 335   1              TH0=T0RH;
 336   1              TL0=T0RL;
 337   1              TMOD&=0xf0;
 338   1              TMOD|=0x01;
 339   1              TR0=1;
 340   1              ET0=1;
 341   1      }
 342          
 343          //定时器0中断涵数
 344          void timer0() interrupt 1   //1ms中断
 345          {
 346   1              static unsigned int tmr0;
 347   1              static unsigned int tmr1;
 348   1              TH0=T0RH;
 349   1              TL0=T0RL;
 350   1              tmr0++;
 351   1              tmr1++;
 352   1      
 353   1              if(tmr0>=10)  //每10ms刷新一次占空比
 354   1              {
 355   2                      tmr0=0;
 356   2                      time_flag0=1;
 357   2              }
 358   1              if(tmr1>=2)  //2ms输出PWM
 359   1              {
 360   2                      tmr1=0;
 361   2                      time_flag1=1;
 362   2              }
 363   1      }
 364          
C51 COMPILER V9.60.0.0   DEBUG                                                             07/07/2022 09:42:22 PAGE 7   

 365          void LCD1602_Init()    //1602初始化函数 
 366          {
 367   1          LCD1602_write_cmd(0x01);    //显示清屏
 368   1          LCD1602_write_cmd(0x38);    //显示模式设置
 369   1          LCD1602_write_cmd(0x0C);    //显示开及光标设置
 370   1          LCD1602_write_cmd(0x06);    //显示光标移动位置
 371   1      }
 372          
 373          void LcdWaitReady()    /* 等待液晶准备好 */
 374          {
 375   1          unsigned char sta;
 376   1          
 377   1          LCD1602_DB = 0xFF;
 378   1          LCD1602_RS = 0;
 379   1          LCD1602_RW = 1;       //读状态
 380   1          do {
 381   2              LCD1602_E = 1;
 382   2              sta = LCD1602_DB; //读取状态字
 383   2              LCD1602_E = 0;
 384   2          } while (sta & 0x80); //bit7等于1表示液晶正忙，重复检测直到其等于0为止
 385   1      }
 386          
 387          void LCD1602_write_cmd(unsigned char cmd)    //写命令函数
 388          {
 389   1          LcdWaitReady();
 390   1          LCD1602_RS = 0;
 391   1          LCD1602_RW = 0;
 392   1          LCD1602_DB = cmd;
 393   1          LCD1602_E  = 1;
 394   1          Delay_ms(10);
 395   1          LCD1602_E  = 0;
 396   1      }
 397          
 398          void LCD1602_write_data(unsigned char date)    //写数据函数 
 399          {
 400   1          LcdWaitReady();
 401   1          LCD1602_RS = 1;
 402   1          LCD1602_RW = 0;
 403   1          LCD1602_DB = date;
 404   1          LCD1602_E  = 1;
 405   1          Delay_ms(10);
 406   1          LCD1602_E  = 0;
 407   1      }
 408          
 409          void LCD1602_Clear()    //1602清屏函数
 410          {
 411   1          LCD1602_write_cmd(0x01);
 412   1      }
 413          
 414          void LCD1602_SetCursor(unsigned char x,unsigned char y)//设置1602光标位置函数
 415          {
 416   1          unsigned char addr;
 417   1          if(y==0)     //由输入的屏幕坐标计算显示RAM的地址
 418   1              addr=0x00+x;
 419   1          else
 420   1              addr=0x40+x;
 421   1          LCD1602_write_cmd(addr | 0x80);//设置RAM地址
 422   1      }
 423          
 424          void LCD1602_ShowNum(char x, char y, unsigned int num)  //指定位置显示数字函数
 425          {
 426   1          unsigned int i,j,k,l,n;
C51 COMPILER V9.60.0.0   DEBUG                                                             07/07/2022 09:42:22 PAGE 8   

 427   1          i=num/10000;
 428   1          j=(num-10000*i)/1000;
 429   1          k=(num-10000*i-1000*j)/100;
 430   1          l=(num-10000*i-1000*j-100*k)/10;
 431   1          n=num%10;
 432   1          LCD1602_SetCursor(x,y);  //设置起始地址
 433   1          if(i!=0)LCD1602_write_data(i+0x30);
 434   1          if((i!=0)||(j!=0))LCD1602_write_data(j+0x30);
 435   1          if((i!=0)||(j!=0)||(k!=0))LCD1602_write_data(k+0x30);
 436   1          if((i!=0)||(j!=0)||(k!=0)||(l!=0))LCD1602_write_data(l+0x30);
 437   1          LCD1602_write_data(n+0x30);
 438   1      }
 439          
 440          void LCD1602_ShowChar(unsigned char xpos,unsigned char ypos,char xsz)    //指定位置显示字符函数
 441          {
 442   1          ypos%=2;
 443   1          if(ypos==0)
 444   1          {
 445   2              LCD1602_write_cmd(0x80+xpos);
 446   2          }
 447   1          else
 448   1          {
 449   2              LCD1602_write_cmd(0x80+0x40+xpos);
 450   2          }
 451   1          LCD1602_write_data(xsz);
 452   1      }
 453          
 454          void LCD1602_ShowStr(unsigned char xpos,unsigned char ypos,char *p) //指定位置显示字符串函数
 455          {
 456   1          if(ypos>1)return;
 457   1          while(*p!='\0')
 458   1          {
 459   2              LCD1602_ShowChar(xpos++,ypos,*p++);
 460   2              if(*p=='\n')
 461   2              {
 462   3                  xpos=0;
 463   3                  ypos++;
 464   3                  p++;
 465   3              }
 466   2          }
 467   1      }
 468          
 469          void Delay_ms(unsigned int nms)        //@11.0592MHz   nms为要延时的ms数  
 470          {
 471   1          unsigned char i, j;    
 472   1          while(nms--)
 473   1          {
 474   2              i = 15;
 475   2              j = 90;
 476   2              do
 477   2              {
 478   3                  while (--j);
 479   3              } while (--i);
 480   2          }
 481   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1512    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
C51 COMPILER V9.60.0.0   DEBUG                                                             07/07/2022 09:42:22 PAGE 9   

   DATA SIZE        =     19      24
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
