C51 COMPILER V9.60.0.0   PWM                                                               07/07/2022 10:48:52 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE PWM
OBJECT MODULE PLACED IN .\Objects\PWM.obj
COMPILER INVOKED BY: D:\software\Keil_v5\C51\BIN\C51.EXE PWM.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listi
                    -ngs\PWM.lst) TABS(2) OBJECT(.\Objects\PWM.obj)

line level    source

   1          #include <reg52.h>
   2          #include <intrins.h>              
   3          
   4          #define uchar unsigned char
   5          #define uint unsigned int
   6          
   7          //Declare SFR associated with the ADC
   8          sfr AUXR      = 0x8e;
   9          sfr ADC_CONTR = 0xC5;
  10          sfr ADC_DATA  = 0xC6;
  11          sfr ADC_LOW2  = 0xBE;
  12          sfr P1M0      = 0x91;
  13          sfr P1M1      = 0x92;
  14          
  15          //Define ADC operation const for ADC_CONTR
  16          #define ADC_POWER   0x80
  17          #define ADC_FLAG    0x10    
  18          #define ADC_START   0x08
  19          #define ADC_SPEEDLL 0x00    //00
  20          #define ADC_SPEEDL  0x20    //01
  21          #define ADC_SPEEDH  0x40    //10
  22          #define ADC_SPEEDHH 0x60    //11
  23          
  24          //定义引脚
  25          sbit RED = P1^0;
  26          sbit GREEN = P1^1;
  27          sbit BLUE = P1^2;
  28          sbit D3 = P1^4;
  29          sbit BEEP = P1^7;
  30          sbit LCD1602_RS = P3^2;         //1602的数据/指令选择控制线
  31          sbit LCD1602_RW = P3^3;
  32          sbit LCD1602_E  = P3^4;         //1602的使能控制线
  33          #define LCD1602_DB P2            //数据端口  D0~D7
  34          
  35          //全局变量
  36          uint check_data = 0;
  37          uint light_data = 0;
  38          uint MODEL = 0;   //命令的几种模式，初始为自动转换8色
  39          uint mod = 9;       //1-9
  40          unsigned char R_OUT=0,G_OUT=0,B_OUT=0; //定义占空比计数变量
  41          unsigned int MAX=200,MIN=1;           //定义变色起始级数，范围最大可以0-255
  42          unsigned char T0RH=0,T0RL=0;         //定时器中间变量
  43          bit time_flag0=0;       //每10ms刷新一次占空比
  44          bit time_flag1=0;       //每2ms输出PWM
  45          bit r_flag; //receive标志
  46          uchar order;
  47          uint clock;
  48          uint enable_clock = 0;
  49          uint clock_flag;//开灯或关灯
  50          uint enable_light = 0;
  51          uint min_count = 0;
  52          uint tmr2 = 0;
  53          uint index = 0;
  54          
C51 COMPILER V9.60.0.0   PWM                                                               07/07/2022 10:48:52 PAGE 2   

  55          void configtime0(unsigned int ms);   //定时器0配置
  56          void ConfigPWM(unsigned char t);     //PWM占空比处理函数
  57          void POUT();                         //PWM输出函数 
  58          void InitADC();                      //ADC初始化
  59          void InitUart();                     //串口初始化
  60          void LCD1602_Init();
  61          void Delay_ms(unsigned int nms);
  62          void delay(unsigned int t);
  63          void LcdWaitReady();
  64          void LCD1602_write_cmd(unsigned char cmd);
  65          void LCD1602_write_data(unsigned char date);
  66          void LCD1602_Clear();//清屏
  67          void LCD1602_SetCursor(unsigned char x,unsigned char y);  //设置光标初始位置
  68          void LCD1602_ShowChar(unsigned char xpos,unsigned char ypos,unsigned char xsz);
  69          void LCD1602_ShowStr(unsigned char xpos,unsigned char ypos,unsigned char *p);
  70          void LCD1602_ShowNum(char x, char y, unsigned int num);
  71          uint Adc(unsigned char n);
  72          void check(uint data1);
  73          void send(uchar i);
  74          void judge_order();
  75          void LED_check();
  76          void LED_change();
  77          
  78          void main()
  79          {
  80   1          InitUart();//定时器1 波特率9600
  81   1          InitADC();//ADC端口模式初始化
  82   1          LCD1602_Init();//LCD初始化
  83   1          configtime0(1);//定时器0 1ms
  84   1      
  85   1          RED = 0;
  86   1          GREEN = 0;
  87   1          BLUE = 0;
  88   1          BEEP = 1;
  89   1          D3 = 0;
  90   1          min_count = 0;
  91   1          tmr2 = 0;
  92   1          index = 0;
  93   1          MODEL=1;
  94   1          AUXR |= 0x10;   //AD中断允许
  95   1          IE |= 0xBA;  
  96   1          EA = 1;     //开启全局中断允许
  97   1          Delay_ms(500);
  98   1      
  99   1          LED_check();//故障检测
 100   1      
 101   1          RED = 0;
 102   1          GREEN = 0;
 103   1          BLUE = 0;
 104   1          Delay_ms(100);
 105   1      
 106   1          while (1)
 107   1          {
 108   2              //光敏AD检测和LCD输出
 109   2              light_data=Adc(6);
 110   2              LCD1602_ShowStr(0,1,"Light:");
 111   2              LCD1602_ShowNum(7,1,light_data);
 112   2      
 113   2              //判断蓝牙是否接收到数据
 114   2              if(r_flag) //如果有数据则进入这个语句
 115   2        {
 116   3          LCD1602_ShowChar(0,0,order);
C51 COMPILER V9.60.0.0   PWM                                                               07/07/2022 10:48:52 PAGE 3   

 117   3                      judge_order();
 118   3          r_flag=0;
 119   3        }
 120   2              else
 121   2              {
 122   3                      ;
 123   3              }
 124   2      
 125   2              //执行
 126   2              if(MODEL == 0)//固定灯效
 127   2              {
 128   3                      LED_change();
 129   3              }
 130   2              else if(MODEL == 1 || MODEL == 2 || MODEL == 3)
 131   2              {
 132   3                      D3 = 1;
 133   3                      if(time_flag1 == 1)//2ms执行PWM控制
 134   3                      {
 135   4                              time_flag1 = 0;
 136   4                              POUT();
 137   4                      }
 138   3              }
 139   2              else if(MODEL == 4)
 140   2              {
 141   3                      //clock = order & 0x0F;
 142   3          //enable_clock = 1;//开定时
 143   3                      if(min_count >= clock)
 144   3                      {
 145   4                              MODEL = 0;                        
 146   4                      }
 147   3              }
 148   2              else if(MODEL == 5)
 149   2              {
 150   3                      //clock = order & 0x0F;
 151   3          //enable_clock = 0;//关定时
 152   3                      LED_change();
 153   3                      if(min_count >= clock)
 154   3                      {
 155   4                              RED = 0;
 156   4                              GREEN = 0;
 157   4                              BLUE = 0;
 158   4                      }
 159   3              }
 160   2              else if(MODEL == 6)
 161   2              {
 162   3                      //enable_light = 1;//开光敏
 163   3                      if(light_data <= 400)
 164   3                      {
 165   4                              LED_change();
 166   4                      }
 167   3                      else
 168   3                      {
 169   4                              RED = 0;
 170   4                              GREEN = 0;
 171   4                              BLUE = 0;
 172   4                      }
 173   3              }
 174   2          }
 175   1      }
 176          
 177          void InitADC()
 178          {
C51 COMPILER V9.60.0.0   PWM                                                               07/07/2022 10:48:52 PAGE 4   

 179   1              P1M0 = 0x48;
 180   1              P1M1 = 0x4F;
 181   1              ADC_DATA = 0;
 182   1              ADC_LOW2 = 0;
 183   1              ADC_CONTR = 0x60 | 3;   //设置在check口，转换速度最高
 184   1              delay(10);
 185   1      }
 186          
 187          //定时器1（串口）
 188          void InitUart()
 189          {
 190   1          SCON = 0x5a;  //设置串口为8位可变波特率  9600
 191   1          TMOD = 0x20;
 192   1          TH1 = TL1 = 0xFD; 
 193   1          TI = 1; 
 194   1          TR1 = 1;
 195   1          ES = 1;
 196   1      }
 197          
 198          void LCD1602_Init()    //1602初始化函数 
 199          {
 200   1          LCD1602_write_cmd(0x01);    //显示清屏
 201   1          LCD1602_write_cmd(0x38);    //显示模式设置
 202   1          LCD1602_write_cmd(0x0C);    //显示开及光标设置
 203   1          LCD1602_write_cmd(0x06);    //显示光标移动位置
 204   1      }
 205          
 206          /******************故障检测****************/
 207          void LED_check()
 208          {
 209   1              //判断蓝灯通断
 210   1              RED = 0;
 211   1              GREEN = 0;
 212   1              BLUE = 1;
 213   1              Delay_ms(500);
 214   1              check_data=Adc(3);
 215   1              check(check_data);
 216   1      
 217   1              //判断红灯通断
 218   1              RED = 1;
 219   1              GREEN = 0;
 220   1              BLUE = 0;
 221   1              Delay_ms(500);
 222   1              check_data=Adc(3);
 223   1              check(check_data);
 224   1              
 225   1              //判断绿灯通断
 226   1              RED = 0;
 227   1              GREEN = 1;
 228   1              BLUE = 0;
 229   1              Delay_ms(500);
 230   1              check_data=Adc(3);
 231   1              check(check_data);
 232   1      }
 233          
 234          void judge_order()
 235          {
 236   1        MODEL = (order & 0xF0) >> 4;
 237   1              if(MODEL == 0)
 238   1              {
 239   2                      mod = order & 0x0F;
 240   2                      if(mod <= 8)
C51 COMPILER V9.60.0.0   PWM                                                               07/07/2022 10:48:52 PAGE 5   

 241   2                      {
 242   3                              index = mod - 1;
 243   3                      }
 244   2                      else if(mod == 9)
 245   2                      {
 246   3                              index = 0;
 247   3                      }
 248   2              }
 249   1              else if(MODEL == 1)
 250   1              {
 251   2                      R_OUT = order & 0x0F;
 252   2              }
 253   1              else if(MODEL == 2)
 254   1              {
 255   2                      G_OUT = order & 0x0F;
 256   2              }
 257   1              else if(MODEL == 3)
 258   1              {
 259   2                      B_OUT = order & 0x0F;
 260   2              }
 261   1              else if(MODEL == 4)
 262   1              {
 263   2                      clock = order & 0x0F;
 264   2                      min_count = 0;
 265   2                      tmr2 = 0;
 266   2                      clock_flag = 1;
 267   2              }
 268   1              else if(MODEL == 5)
 269   1              {
 270   2                      clock = order & 0x0F;
 271   2                      min_count = 0;
 272   2                      tmr2 = 0;
 273   2                      clock_flag = 0;
 274   2              }
 275   1              else if(MODEL == 6)
 276   1              {
 277   2                      ;//开光敏
 278   2              }
 279   1              else
 280   1              {
 281   2                      MODEL = 0;//debug
 282   2              }
 283   1      
 284   1      }
 285          
 286          void LED_change()
 287          {
 288   1              if(time_flag0 == 1)//10ms更新PWM占空比
 289   1              {
 290   2                      time_flag0 = 0;
 291   2                      ConfigPWM(1);
 292   2              }
 293   1              if(time_flag1 == 1)//2ms执行PWM控制
 294   1              {
 295   2                      time_flag1 = 0;
 296   2                      POUT();
 297   2              }
 298   1      }
 299          
 300          //定时器0配置
 301          void configtime0(unsigned int ms)
 302          {
C51 COMPILER V9.60.0.0   PWM                                                               07/07/2022 10:48:52 PAGE 6   

 303   1              unsigned long tmp;
 304   1              AUXR|=0x80;
 305   1              tmp=11059200/12;  // 频率
 306   1              tmp=tmp*ms/1000;  //需要多少个机器周期
 307   1              tmp=65536-tmp;
 308   1              T0RH=(unsigned char)(tmp>>8);
 309   1              T0RL=(unsigned char)tmp;
 310   1              TH0=T0RH;
 311   1              TL0=T0RL;
 312   1              TMOD&=0xf0;
 313   1              TMOD|=0x01;
 314   1              TR0=1;
 315   1              ET0=1;
 316   1      }
 317          
 318          //定时器0中断涵数
 319          void timer0() interrupt 1   //1ms中断
 320          {
 321   1              static unsigned int tmr0;
 322   1              TH0=T0RH;
 323   1              TL0=T0RL;
 324   1      
 325   1              D3 = 1;
 326   1      
 327   1              tmr0 = (tmr0 + 1 ) % 60000;
 328   1              if(tmr0 % 10 == 9)  //每10ms刷新一次占空比
 329   1              {
 330   2                      time_flag0=1;
 331   2              }
 332   1              if(tmr0 % 2)  //2ms输出PWM
 333   1              {
 334   2                      time_flag1=1;
 335   2              }
 336   1              if(tmr0 == 59999)//计时（分钟）
 337   1              {
 338   2                      min_count++;
 339   2                      if(min_count >=17)
 340   2                      {
 341   3                              min_count = 0;
 342   3                      }
 343   2              }
 344   1      }
 345          
 346          
 347          void LcdWaitReady()    /* 等待液晶准备好 */
 348          {
 349   1          unsigned char sta;
 350   1          
 351   1          LCD1602_DB = 0xFF;
 352   1          LCD1602_RS = 0;
 353   1          LCD1602_RW = 1;       //读状态
 354   1          do {
 355   2              LCD1602_E = 1;
 356   2              sta = LCD1602_DB; //读取状态字
 357   2              LCD1602_E = 0;
 358   2          } while (sta & 0x80); //bit7等于1表示液晶正忙，重复检测直到其等于0为止
 359   1      }
 360          
 361          void Delay_ms(unsigned int nms)        //@11.0592MHz   nms为要延时的ms数  
 362          {
 363   1          unsigned char i, j;    
 364   1          while(nms--)
C51 COMPILER V9.60.0.0   PWM                                                               07/07/2022 10:48:52 PAGE 7   

 365   1          {
 366   2              i = 15;
 367   2              j = 90;
 368   2              do
 369   2              {
 370   3                  while (--j);
 371   3              } while (--i);
 372   2          }
 373   1      }
 374          
 375          void delay(unsigned int t) //延时
 376          {       
 377   1          unsigned int i, j; 
 378   1          for(i=0;i<t;i++)
 379   1        { 
 380   2            for(j=0;j<10;j++)
 381   2          {;} 
 382   2          } 
 383   1      } 
 384          
 385          void LCD1602_write_cmd(unsigned char cmd)    //写命令函数
 386          {
 387   1          LcdWaitReady();
 388   1          LCD1602_RS = 0;
 389   1          LCD1602_RW = 0;
 390   1          LCD1602_DB = cmd;
 391   1          LCD1602_E  = 1;
 392   1          Delay_ms(10);
 393   1          LCD1602_E  = 0;
 394   1      }
 395          
 396          void LCD1602_write_data(unsigned char date)    //写数据函数 
 397          {
 398   1          LcdWaitReady();
 399   1          LCD1602_RS = 1;
 400   1          LCD1602_RW = 0;
 401   1          LCD1602_DB = date;
 402   1          LCD1602_E  = 1;
 403   1          Delay_ms(10);
 404   1          LCD1602_E  = 0;
 405   1      }
 406          
 407          void LCD1602_Clear()    //1602清屏函数
 408          {
 409   1          LCD1602_write_cmd(0x01);
 410   1      }
 411          
 412          void LCD1602_SetCursor(unsigned char x,unsigned char y)//设置1602光标位置函数
 413          {
 414   1          unsigned char addr;
 415   1          if(y==0)     //由输入的屏幕坐标计算显示RAM的地址
 416   1              addr=0x00+x;
 417   1          else
 418   1              addr=0x40+x;
 419   1          LCD1602_write_cmd(addr | 0x80);//设置RAM地址
 420   1      }
 421          
 422          void LCD1602_ShowNum(char x, char y, unsigned int num)  //指定位置显示数字函数
 423          {
 424   1          unsigned int i,j,k,l,n;
 425   1          i=num/10000;
 426   1          j=(num-10000*i)/1000;
C51 COMPILER V9.60.0.0   PWM                                                               07/07/2022 10:48:52 PAGE 8   

 427   1          k=(num-10000*i-1000*j)/100;
 428   1          l=(num-10000*i-1000*j-100*k)/10;
 429   1          n=num%10;
 430   1          LCD1602_SetCursor(x,y);  //设置起始地址
 431   1          if(i!=0)LCD1602_write_data(i+0x30);
 432   1          if((i!=0)||(j!=0))LCD1602_write_data(j+0x30);
 433   1          if((i!=0)||(j!=0)||(k!=0))LCD1602_write_data(k+0x30);
 434   1          if((i!=0)||(j!=0)||(k!=0)||(l!=0))LCD1602_write_data(l+0x30);
 435   1          LCD1602_write_data(n+0x30);
 436   1      }
 437          
 438          void LCD1602_ShowChar(unsigned char xpos,unsigned char ypos,char xsz)    //指定位置显示字符函数
 439          {
 440   1          ypos%=2;
 441   1          if(ypos==0)
 442   1          {
 443   2              LCD1602_write_cmd(0x80+xpos);
 444   2          }
 445   1          else
 446   1          {
 447   2              LCD1602_write_cmd(0x80+0x40+xpos);
 448   2          }
 449   1          LCD1602_write_data(xsz);
 450   1      }
 451          
 452          void LCD1602_ShowStr(unsigned char xpos,unsigned char ypos,char *p) //指定位置显示字符串函数
 453          {
 454   1          if(ypos>1)return;
 455   1          while(*p!='\0')
 456   1          {
 457   2              LCD1602_ShowChar(xpos++,ypos,*p++);
 458   2              if(*p=='\n')
 459   2              {
 460   3                  xpos=0;
 461   3                  ypos++;
 462   3                  p++;
 463   3              }
 464   2          }
 465   1      }
 466          
 467          uint Adc(unsigned char n)//采集第几通道的数据
 468          {
 469   1        unsigned char i;  
 470   1        uint result=0;
 471   1      
 472   1        ADC_CONTR = ADC_CONTR|0x80;  //10000000 开启转换电源
 473   1        delay(10);
 474   1        i = 0x01<<n;
 475   1              P1M0 = P1M0|i;
 476   1          P1M1 = P1M1|i;   //采样的通道开漏
 477   1              delay(10); 
 478   1              ADC_CONTR = 0xE0|n;   //打开adc电源,设置转换速率 设置P1.n模拟通道  1110_0000|n
 479   1              delay(10);    //延时一端时间，使输入电压达到稳定
 480   1        ADC_DATA = 0;   
 481   1        ADC_LOW2 = 0; //清A/D转换结果寄存器
 482   1        ADC_CONTR = ADC_CONTR|0x08;  //ADC_START=1,开始转换   0000_1000
 483   1        delay(10);
 484   1              ADC_CONTR = ADC_CONTR&0xE7;  //将ADC_FLAG软件清零   1110_0111  
 485   1        result = ADC_DATA;
 486   1        result<<=2;
 487   1        result = result&0x03FC;   //0000_0011_1111_1100
 488   1        result = result|(ADC_LOW2 & 0x03);
C51 COMPILER V9.60.0.0   PWM                                                               07/07/2022 10:48:52 PAGE 9   

 489   1        return(result);       //10位的结果
 490   1      }
 491          
 492          void check(uint data1)
 493          {
 494   1          if(data1 < 15)
 495   1          {
 496   2              EA = 0;//关闭全局中断
 497   2              //蓝牙发送报警
 498   2              while(1)
 499   2              {
 500   3                  LCD1602_ShowStr(15,1,"!");  //LCD显示感叹号
 501   3                  D3 = 1;                     //灯闪烁，蜂鸣器间歇性报警
 502   3                  BEEP = 1;
 503   3                  delay(40000);
 504   3                  D3 = 0;
 505   3                  BEEP = 0;
 506   3                  delay(40000);
 507   3              }
 508   2          }
 509   1          else EA = 1;
 510   1      }
 511          
 512          void send(uchar i)
 513          {
 514   1        TI=0;
 515   1        SBUF=i;
 516   1        while(TI==0);
 517   1        TI=0;
 518   1      }
 519          
 520          //每调用一次此涵数，PWM占空比加一
 521          void ConfigPWM(unsigned char t)  //PWM占空比处理函数
 522          {
 523   1              static unsigned char dir=0;    //定义变亮或变暗方向
 524   1              static unsigned int time=0;    //中间变量
 525   1      
 526   1              switch(index)
 527   1              {
 528   2          case 0: 
 529   2                              if(dir==0)      //红色由暗变亮
 530   2                              {
 531   3                                      time+=t;
 532   3                                      R_OUT=time;
 533   3                                      G_OUT=0;
 534   3                                      B_OUT=0;
 535   3                                      if(time>=MAX)
 536   3                                      {
 537   4                                              dir=1;
 538   4                                      }
 539   3                              }
 540   2                              else         //红色由亮变暗
 541   2                              {
 542   3                                      time-=t;
 543   3                                      R_OUT=time;
 544   3                                      G_OUT=0;
 545   3                                      B_OUT=0;
 546   3                                      if(time<=MIN)
 547   3                                      {
 548   4                                              dir=0;
 549   4                                              time=0;
 550   4                                              if(mod == 1)
C51 COMPILER V9.60.0.0   PWM                                                               07/07/2022 10:48:52 PAGE 10  

 551   4                                              {
 552   5                                                      index = 0;
 553   5                                              }
 554   4                                              else if(mod == 9)
 555   4                                              {
 556   5                                                      index = 1;
 557   5                                              }
 558   4                                              else
 559   4                                              {
 560   5                                                      index = 7;
 561   5                                              }
 562   4                                      }
 563   3                              }
 564   2                              break;
 565   2                                             
 566   2                      case 1:            
 567   2                              if(dir==0)                //橙色由暗变亮
 568   2                              {
 569   3                                      time+=t;
 570   3                                      R_OUT=time;
 571   3              G_OUT=time/2;
 572   3                                      B_OUT=0;
 573   3                                      if(time>=MAX)
 574   3                                      {
 575   4                                              dir=1;
 576   4                                      }
 577   3                              }
 578   2                              else                        //橙色由亮变暗
 579   2                              {
 580   3                                      time-=t;
 581   3                                      R_OUT=time;
 582   3              G_OUT=time/2;
 583   3                                      B_OUT=0;
 584   3                                      if(time<=MIN)
 585   3                                      {
 586   4                                              dir=0;
 587   4                                              time=0;
 588   4                                              if(mod == 2)
 589   4                                              {
 590   5                                                      index = 1;
 591   5                                              }
 592   4                                              else if(mod == 9)
 593   4                                              {
 594   5                                                      index = 2;
 595   5                                              }
 596   4                                              else
 597   4                                              {
 598   5                                                      index = 7;
 599   5                                              }
 600   4                                      }
 601   3                              }
 602   2                              break;
 603   2                                             
 604   2                      case 2:            
 605   2                              if(dir==0)                //黄色由暗变亮
 606   2                              {
 607   3                                      time+=t;
 608   3                                      R_OUT=time;
 609   3                                      G_OUT=time;
 610   3                                      B_OUT=0;
 611   3                                      if(time>=MAX)
 612   3                                      {
C51 COMPILER V9.60.0.0   PWM                                                               07/07/2022 10:48:52 PAGE 11  

 613   4                                              dir=1;
 614   4                                      }
 615   3                              }
 616   2                              else                        //黄色由亮变暗
 617   2                              {
 618   3                                      time-=t;
 619   3                                      R_OUT=time;
 620   3                                      G_OUT=time;
 621   3                                      B_OUT=0;
 622   3                                      if(time<=MIN)
 623   3                                      {
 624   4                                              dir=0;
 625   4                                              time=0;
 626   4                                              if(mod == 3)
 627   4                                              {
 628   5                                                      index = 2;
 629   5                                              }
 630   4                                              else if(mod == 9)
 631   4                                              {
 632   5                                                      index = 3;
 633   5                                              }
 634   4                                              else
 635   4                                              {
 636   5                                                      index = 7;
 637   5                                              }
 638   4                                      }
 639   3                              }
 640   2                              break;
 641   2                                             
 642   2                      case 3:            
 643   2                              if(dir==0)                //绿色由暗变亮
 644   2                              {
 645   3                                      time+=t;
 646   3                                      R_OUT=0;
 647   3                                      G_OUT=time;
 648   3                                      B_OUT=0;
 649   3                                      if(time>=MAX)
 650   3                                      {
 651   4                                              dir=1;
 652   4                                      }
 653   3                              }
 654   2                              else                        //绿色由亮变暗
 655   2                              {
 656   3                                      time-=t;
 657   3                                      R_OUT=0;
 658   3                                      G_OUT=time;
 659   3                                      B_OUT=0;
 660   3                                      if(time<=MIN)
 661   3                                      {
 662   4                                              dir=0;
 663   4                                              time=0;
 664   4                                              if(mod == 4)
 665   4                                              {
 666   5                                                      index = 3;
 667   5                                              }
 668   4                                              else if(mod == 9)
 669   4                                              {
 670   5                                                      index = 4;
 671   5                                              }
 672   4                                              else
 673   4                                              {
 674   5                                                      index = 7;
C51 COMPILER V9.60.0.0   PWM                                                               07/07/2022 10:48:52 PAGE 12  

 675   5                                              }
 676   4                                      }
 677   3                              }
 678   2                              break;
 679   2                                             
 680   2                      case 4:           
 681   2                              if(dir==0)                //青色由暗变亮
 682   2                              {
 683   3                                      time+=t;
 684   3                                      R_OUT=0;
 685   3                                      G_OUT=time;
 686   3                                      B_OUT=time;
 687   3                                      if(time>=MAX)
 688   3                                      {
 689   4                                              dir=1;
 690   4                                      }
 691   3                              }
 692   2                              else                        //青色由亮变暗
 693   2                              {
 694   3                                      time-=t;
 695   3                                      R_OUT=0;
 696   3                                      G_OUT=time;
 697   3                                      B_OUT=time;
 698   3                                      if(time<=MIN)
 699   3                                      {
 700   4                                              dir=0;
 701   4                                              time=0;
 702   4                                              if(mod == 5)
 703   4                                              {
 704   5                                                      index = 4;
 705   5                                              }
 706   4                                              else if(mod == 9)
 707   4                                              {
 708   5                                                      index = 5;
 709   5                                              }
 710   4                                              else
 711   4                                              {
 712   5                                                      index = 7;
 713   5                                              }
 714   4                                      }
 715   3                              }
 716   2                              break;
 717   2                                             
 718   2                      case 5:            
 719   2                              if(dir==0)                //蓝色由暗变亮
 720   2                              {
 721   3                                      time+=t;
 722   3                                      R_OUT=0;
 723   3                                      G_OUT=0;
 724   3                                      B_OUT=time;
 725   3                                      if(time>=MAX)
 726   3                                      {
 727   4                                              dir=1;
 728   4                                      }
 729   3                              }
 730   2                              else                        //蓝色由亮变暗
 731   2                              {
 732   3                                      time-=t;
 733   3                                      R_OUT=0;
 734   3                                      G_OUT=0;
 735   3                                      B_OUT=time;
 736   3                                      if(time<=MIN)
C51 COMPILER V9.60.0.0   PWM                                                               07/07/2022 10:48:52 PAGE 13  

 737   3                                      {
 738   4                                              dir=0;
 739   4                                              time=0;
 740   4                                              if(mod == 6)
 741   4                                              {
 742   5                                                      index = 5;
 743   5                                              }
 744   4                                              else if(mod == 9)
 745   4                                              {
 746   5                                                      index = 6;
 747   5                                              }
 748   4                                              else
 749   4                                              {
 750   5                                                      index = 7;
 751   5                                              }
 752   4                                      }
 753   3                              }
 754   2                              break;
 755   2                                             
 756   2                      case 6:            
 757   2                              if(dir==0)                //紫色由暗变亮
 758   2                              {
 759   3                                      time+=t;
 760   3                                      R_OUT=time;
 761   3                                      G_OUT=0;
 762   3                                      B_OUT=time;
 763   3                                      if(time>=MAX)
 764   3                                      {
 765   4                                              dir=1;
 766   4                                      }
 767   3                              }
 768   2                              else                        //紫色由亮变暗
 769   2                              {
 770   3                                      time-=t;
 771   3                                      R_OUT=time;
 772   3                                      G_OUT=0;
 773   3                                      B_OUT=time;
 774   3                                      if(time<=MIN)
 775   3                                      {
 776   4                                              dir=0;
 777   4                                              time=0;
 778   4                                              if(mod == 7)
 779   4                                              {
 780   5                                                      index = 6;
 781   5                                              }
 782   4                                              else
 783   4                                              {
 784   5                                                      index = 7;
 785   5                                              }
 786   4                                      }
 787   3                              }
 788   2                              break;
 789   2                                             
 790   2                      case 7:            
 791   2                              if(dir==0)                //白色由暗变亮
 792   2                              {
 793   3                                      time+=t;
 794   3                                      G_OUT=time;
 795   3                                      B_OUT=time;
 796   3                                      R_OUT=time;
 797   3                                      if(time>=MAX)
 798   3                                      {
C51 COMPILER V9.60.0.0   PWM                                                               07/07/2022 10:48:52 PAGE 14  

 799   4                                              dir=1;
 800   4                                      }
 801   3                              }
 802   2                              else                        //白色由亮变暗
 803   2                              {
 804   3                                      time-=t;
 805   3                                      G_OUT=time;
 806   3                                      B_OUT=time;
 807   3                                      R_OUT=time;
 808   3                                      if(time<=MIN)
 809   3                                      {
 810   4                                              dir=0;
 811   4                                              time=0;
 812   4                                              if(mod == 8)
 813   4                                              {
 814   5                                                      index = 7;
 815   5                                              }
 816   4                                              else if(mod == 9)
 817   4                                              {
 818   5                                                      index = 0;
 819   5                                              }
 820   4                                              else
 821   4                                              {
 822   5                                                      index = 7;
 823   5                                              }
 824   4                                      }
 825   3                              }
 826   2                              break;
 827   2                       
 828   2              }
 829   1      }
 830          
 831          //输出占空比
 832          void POUT() 
 833          {
 834   1          unsigned char cnt;  
 835   1          for(cnt=0;cnt<MAX;cnt++)
 836   1          {
 837   2              if(cnt<R_OUT)
 838   2                      RED=1;        //红色占空比大于计数值时红灯亮
 839   2              else
 840   2                      RED=0;        //否则就关闭红色
 841   2                     
 842   2              if(cnt<G_OUT)               
 843   2                      GREEN=1;                //绿色占空比大于计数值时绿灯亮
 844   2              else
 845   2                      GREEN=0;                //否则就关闭绿色
 846   2                     
 847   2              if(cnt<B_OUT)
 848   2                      BLUE=1;                //蓝色占空比大于计数值时蓝灯亮
 849   2              else
 850   2                      BLUE=0;                //否则就关闭蓝色
 851   2          }
 852   1      }
 853          
 854          void serial() interrupt 4//串行中断函数
 855          {
 856   1         order=SBUF;  //将收取的数据存到order
 857   1         r_flag=1;  //标志置位——表示单片机收到数据
 858   1         RI=0;   //接收标志清零
 859   1      }

C51 COMPILER V9.60.0.0   PWM                                                               07/07/2022 10:48:52 PAGE 15  


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2484    ----
   CONSTANT SIZE    =      9    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     37      21
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
