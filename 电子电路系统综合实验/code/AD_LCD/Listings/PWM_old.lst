C51 COMPILER V9.60.0.0   PWM_OLD                                                           07/06/2022 19:19:43 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE PWM_OLD
OBJECT MODULE PLACED IN .\Objects\PWM_old.obj
COMPILER INVOKED BY: D:\software\Keil_v5\C51\BIN\C51.EXE PWM_old.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\L
                    -istings\PWM_old.lst) TABS(2) OBJECT(.\Objects\PWM_old.obj)

line level    source

   1          #include <reg52.h>
   2          #include <intrins.h>              
   3          
   4          #define Uchar unsigned char
   5          #define Uint unsigned int
   6          #define uchar unsigned char
   7          #define uint unsigned int
   8          #define Ulong unsigned long
   9          #define ulong unsigned long
  10          
  11          //Declare SFR associated with the ADC
  12          sfr AUXR      = 0x8e;
  13          sfr ADC_CONTR = 0xC5;
  14          sfr ADC_DATA  = 0xC6;
  15          sfr ADC_LOW2  = 0xBE;
  16          sfr P1M0      = 0x91;
  17          sfr P1M1      = 0x92;
  18          
  19          //Define ADC operation const for ADC_CONTR
  20          #define ADC_POWER   0x80
  21          #define ADC_FLAG    0x10    
  22          #define ADC_START   0x08
  23          #define ADC_SPEEDLL 0x00    //00
  24          #define ADC_SPEEDL  0x20    //01
  25          #define ADC_SPEEDH  0x40    //10
  26          #define ADC_SPEEDHH 0x60    //11
  27          
  28          //定义引脚
  29          sbit RED = P1^0;
  30          sbit GREEN = P1^1;
  31          sbit BLUE = P1^2;
  32          sbit D3 = P1^4;
  33          sbit BEEP = P1^7;
  34          sbit LCD1602_RS = P3^2;         //1602的数据/指令选择控制线
  35          sbit LCD1602_RW = P3^3;
  36          sbit LCD1602_E  = P3^4;         //1602的使能控制线
  37          #define LCD1602_DB P2            //数据端口  D0~D7
  38          
  39          //全局变量
  40          uint check_data = 0;
  41          uint light_data = 0;
  42          uint MOD = 0;   //命令的几种模式，初始为自动转换8色
  43          unsigned char R_OUT=0,G_OUT=0,B_OUT=0; //定义占空比计数变量
  44          unsigned int MAX=200,MIN=1;           //定义变色起始级数，范围最大可以0-255
  45          unsigned char T0RH=0,T0RL=0;         //定时器中间变量
  46          bit time_flag0=0;       //每10ms刷新一次占空比
  47          bit time_flag1=0;       //每2ms输出PWM
  48          
  49          void configtime0(unsigned int ms);   //定时器0配置
  50          void ConfigPWM(unsigned char t);     //PWM占空比处理函数
  51          void POUT();                        //PWM输出函数 
  52          void InitADC();
  53          void InitUart();
  54          void LCD1602_Init();
C51 COMPILER V9.60.0.0   PWM_OLD                                                           07/06/2022 19:19:43 PAGE 2   

  55          void Delay_ms(unsigned int nms);
  56          void delay(unsigned int t);
  57          void LcdWaitReady();
  58          void LCD1602_write_cmd(unsigned char cmd);
  59          void LCD1602_write_data(unsigned char date);
  60          void LCD1602_Clear();//清屏
  61          void LCD1602_SetCursor(unsigned char x,unsigned char y);  //设置光标初始位置
  62          void LCD1602_ShowChar(unsigned char xpos,unsigned char ypos,unsigned char xsz);
  63          void LCD1602_ShowStr(unsigned char xpos,unsigned char ypos,unsigned char *p);
  64          void LCD1602_ShowNum(char x, char y, unsigned int num);
  65          uint Adc(unsigned char n);
  66          void check(uint data1);
  67          void send(uchar i);
  68          
  69          //定时器0配置
  70          void configtime0(unsigned int ms)
  71          {
  72   1              unsigned long tmp;
  73   1              // tmp=11059200/12;  // 频率
  74   1              // tmp=tmp*ms/1000;  //需要多少个机器周期
  75   1              // tmp=65536-tmp;
  76   1              // T0RH=(unsigned char)(tmp>>8);
  77   1              // T0RL=(unsigned char)tmp;
  78   1              TH0=0xFC;
  79   1              TL0=0x67;
  80   1              TMOD&=0xf0;
  81   1              TMOD|=0x01;
  82   1              TR0=1;
  83   1              ET0=1;
  84   1      }
*** WARNING C280 IN LINE 70 OF PWM_old.c: 'ms': unreferenced local variable
*** WARNING C280 IN LINE 72 OF PWM_old.c: 'tmp': unreferenced local variable
  85          
  86          void main()
  87          {
  88   1          InitUart();
  89   1          InitADC();
  90   1          LCD1602_Init();
  91   1          configtime0(1);
  92   1      
  93   1          RED = 0;
  94   1          GREEN = 0;
  95   1          BLUE = 0;
  96   1          BEEP = 1;
  97   1          D3 = 1;
  98   1          AUXR |= 0x10;   //AD中断允许
  99   1          IE = 0xa0;  //打开中断
 100   1          EA = 1;     //开启全局中断允许
 101   1          Delay_ms(1000);
 102   1      
 103   1          /******************故障检测****************/
 104   1          //判断蓝灯通断
 105   1          RED = 0;
 106   1          GREEN = 0;
 107   1          BLUE = 1;
 108   1          Delay_ms(500);
 109   1          check_data=Adc(3);
 110   1          //send(check_data);
 111   1          check(check_data);
 112   1      
 113   1          //判断红灯通断
 114   1          RED = 1;
C51 COMPILER V9.60.0.0   PWM_OLD                                                           07/06/2022 19:19:43 PAGE 3   

 115   1          GREEN = 0;
 116   1          BLUE = 0;
 117   1          Delay_ms(500);
 118   1          check_data=Adc(3);
 119   1          //send(check_data);
 120   1          check(check_data);
 121   1          
 122   1          //判断绿灯通断
 123   1          RED = 0;
 124   1          GREEN = 1;
 125   1          BLUE = 0;
 126   1          Delay_ms(500);
 127   1          check_data=Adc(3);
 128   1          //send(check_data);
 129   1          check(check_data);
 130   1          /****************************************/
 131   1          RED = 0;
 132   1          GREEN = 0;
 133   1          BLUE = 0;
 134   1          Delay_ms(100);
 135   1      
 136   1          while (1)
 137   1          {
 138   2              //光敏AD检测和LCD输出
 139   2              light_data=Adc(6);
 140   2              LCD1602_ShowStr(0,1,"Light:");
 141   2              LCD1602_ShowNum(7,1,light_data); 
 142   2              //MOD转换
 143   2              switch(MOD)
 144   2              {
 145   3                  case 0:
 146   3                      if(time_flag0 == 1)
 147   3                      {
 148   4                              time_flag0 = 0;
 149   4                              ConfigPWM(1);
 150   4                      }
 151   3                      if(time_flag1 == 1)
 152   3                      {
 153   4                              time_flag1 = 0;
 154   4                              POUT();
 155   4                      }
 156   3                      break;
 157   3                  case 1:
 158   3                      
 159   3      
 160   3                      break;
 161   3                  case 2:
 162   3      
 163   3                      
 164   3                      break;
 165   3                  case 3:
 166   3                      
 167   3      
 168   3                      break;
 169   3                  case 4:
 170   3      
 171   3                      
 172   3                      break;
 173   3                  case 5:
 174   3                      
 175   3      
 176   3                      break;
C51 COMPILER V9.60.0.0   PWM_OLD                                                           07/06/2022 19:19:43 PAGE 4   

 177   3                  case 6:
 178   3      
 179   3                      
 180   3                      break;
 181   3                  default:
 182   3                      MOD = 0;
 183   3                      break;
 184   3              }
 185   2      
 186   2          }
 187   1      }
 188          
 189          void InitADC()
 190          {
 191   1          P1M0 = 0x48;
 192   1        P1M1 = 0x4F;
 193   1          ADC_DATA = 0;
 194   1          ADC_LOW2 = 0;
 195   1          ADC_CONTR = 0x60 | 3;   //设置在check口，转换速度最高
 196   1          delay(10);
 197   1      }
 198          
 199          void InitUart()
 200          {
 201   1          SCON = 0x5a;  //设置串口为8位可变波特率  9600
 202   1          TMOD = 0x20;
 203   1          TH1 = TL1 = 0xFD; 
 204   1          TI = 1; 
 205   1          TR1 = 1;
 206   1          ES = 1;
 207   1      }
 208          
 209          void LCD1602_Init()    //1602初始化函数 
 210          {
 211   1          LCD1602_write_cmd(0x01);    //显示清屏
 212   1          LCD1602_write_cmd(0x38);    //显示模式设置
 213   1          LCD1602_write_cmd(0x0C);    //显示开及光标设置
 214   1          LCD1602_write_cmd(0x06);    //显示光标移动位置
 215   1      }
 216          
 217          void LcdWaitReady()    /* 等待液晶准备好 */
 218          {
 219   1          unsigned char sta;
 220   1          
 221   1          LCD1602_DB = 0xFF;
 222   1          LCD1602_RS = 0;
 223   1          LCD1602_RW = 1;       //读状态
 224   1          do {
 225   2              LCD1602_E = 1;
 226   2              sta = LCD1602_DB; //读取状态字
 227   2              LCD1602_E = 0;
 228   2          } while (sta & 0x80); //bit7等于1表示液晶正忙，重复检测直到其等于0为止
 229   1      }
 230          
 231          void Delay_ms(unsigned int nms)        //@11.0592MHz   nms为要延时的ms数  
 232          {
 233   1          unsigned char i, j;    
 234   1          while(nms--)
 235   1          {
 236   2              i = 15;
 237   2              j = 90;
 238   2              do
C51 COMPILER V9.60.0.0   PWM_OLD                                                           07/06/2022 19:19:43 PAGE 5   

 239   2              {
 240   3                  while (--j);
 241   3              } while (--i);
 242   2          }
 243   1      }
 244          
 245          void delay(unsigned int t) //延时
 246          {       
 247   1          unsigned int i, j; 
 248   1          for(i=0;i<t;i++)
 249   1        { 
 250   2            for(j=0;j<10;j++)
 251   2          {;} 
 252   2          } 
 253   1      } 
 254          
 255          void LCD1602_write_cmd(unsigned char cmd)    //写命令函数
 256          {
 257   1          LcdWaitReady();
 258   1          LCD1602_RS = 0;
 259   1          LCD1602_RW = 0;
 260   1          LCD1602_DB = cmd;
 261   1          LCD1602_E  = 1;
 262   1          Delay_ms(10);
 263   1          LCD1602_E  = 0;
 264   1      }
 265          
 266          void LCD1602_write_data(unsigned char date)    //写数据函数 
 267          {
 268   1          LcdWaitReady();
 269   1          LCD1602_RS = 1;
 270   1          LCD1602_RW = 0;
 271   1          LCD1602_DB = date;
 272   1          LCD1602_E  = 1;
 273   1          Delay_ms(10);
 274   1          LCD1602_E  = 0;
 275   1      }
 276          
 277          void LCD1602_Clear()    //1602清屏函数
 278          {
 279   1          LCD1602_write_cmd(0x01);
 280   1      }
 281          
 282          void LCD1602_SetCursor(unsigned char x,unsigned char y)//设置1602光标位置函数
 283          {
 284   1          unsigned char addr;
 285   1          if(y==0)     //由输入的屏幕坐标计算显示RAM的地址
 286   1              addr=0x00+x;
 287   1          else
 288   1              addr=0x40+x;
 289   1          LCD1602_write_cmd(addr | 0x80);//设置RAM地址
 290   1      }
 291          
 292          void LCD1602_ShowNum(char x, char y, unsigned int num)  //指定位置显示数字函数
 293          {
 294   1          unsigned int i,j,k,l,n;
 295   1          i=num/10000;
 296   1          j=(num-10000*i)/1000;
 297   1          k=(num-10000*i-1000*j)/100;
 298   1          l=(num-10000*i-1000*j-100*k)/10;
 299   1          n=num%10;
 300   1          LCD1602_SetCursor(x,y);  //设置起始地址
C51 COMPILER V9.60.0.0   PWM_OLD                                                           07/06/2022 19:19:43 PAGE 6   

 301   1          if(i!=0)LCD1602_write_data(i+0x30);
 302   1          if((i!=0)||(j!=0))LCD1602_write_data(j+0x30);
 303   1          if((i!=0)||(j!=0)||(k!=0))LCD1602_write_data(k+0x30);
 304   1          if((i!=0)||(j!=0)||(k!=0)||(l!=0))LCD1602_write_data(l+0x30);
 305   1          LCD1602_write_data(n+0x30);
 306   1      }
 307          
 308          void LCD1602_ShowChar(unsigned char xpos,unsigned char ypos,char xsz)    //指定位置显示字符函数
 309          {
 310   1          ypos%=2;
 311   1          if(ypos==0)
 312   1          {
 313   2              LCD1602_write_cmd(0x80+xpos);
 314   2          }
 315   1          else
 316   1          {
 317   2              LCD1602_write_cmd(0x80+0x40+xpos);
 318   2          }
 319   1          LCD1602_write_data(xsz);
 320   1      }
 321          
 322          void LCD1602_ShowStr(unsigned char xpos,unsigned char ypos,char *p) //指定位置显示字符串函数
 323          {
 324   1          if(ypos>1)return;
 325   1          while(*p!='\0')
 326   1          {
 327   2              LCD1602_ShowChar(xpos++,ypos,*p++);
 328   2              if(*p=='\n')
 329   2              {
 330   3                  xpos=0;
 331   3                  ypos++;
 332   3                  p++;
 333   3              }
 334   2          }
 335   1      }
 336          
 337          uint Adc(unsigned char n)//采集第几通道的数据
 338          {
 339   1        unsigned char i;  
 340   1        uint result=0;
 341   1      
 342   1        ADC_CONTR = ADC_CONTR|0x80;  //10000000 开启转换电源
 343   1        delay(10);
 344   1        i = 0x01<<n;
 345   1          P1M0 = P1M0|i;
 346   1          P1M1 = P1M1|i;   //采样的通道开漏
 347   1          delay(10); 
 348   1          ADC_CONTR = 0xE0|n;   //打开adc电源,设置转换速率 设置P1.n模拟通道  1110_0000|n
 349   1          delay(10);    //延时一端时间，使输入电压达到稳定
 350   1        ADC_DATA = 0;   
 351   1        ADC_LOW2 = 0; //清A/D转换结果寄存器
 352   1        ADC_CONTR = ADC_CONTR|0x08;  //ADC_START=1,开始转换   0000_1000
 353   1        delay(10);
 354   1          ADC_CONTR = ADC_CONTR&0xE7;  //将ADC_FLAG软件清零   1110_0111  
 355   1        result = ADC_DATA;
 356   1        result<<=2;
 357   1        result = result&0x03FC;   //0000_0011_1111_1100
 358   1        result = result|(ADC_LOW2 & 0x03);
 359   1        return(result);       //10位的结果
 360   1      }
 361          
 362          void check(uint data1)
C51 COMPILER V9.60.0.0   PWM_OLD                                                           07/06/2022 19:19:43 PAGE 7   

 363          {
 364   1          if(data1 < 15)
 365   1          {
 366   2              EA = 0;//关闭全局中断
 367   2              //蓝牙发送报警
 368   2              while(1)
 369   2              {
 370   3                  LCD1602_ShowStr(15,1,"!");  //LCD显示感叹号
 371   3                  D3 = 1;                     //灯闪烁，蜂鸣器间歇性报警
 372   3                  BEEP = 1;
 373   3                  delay(40000);
 374   3                  D3 = 0;
 375   3                  BEEP = 0;
 376   3                  delay(40000);
 377   3              }
 378   2          }
 379   1      }
 380          
 381          void send(uchar i)
 382          {
 383   1        TI=0;
 384   1        SBUF=i;
 385   1        while(TI==0);
 386   1        TI=0;
 387   1      }
 388          
 389          //每调用一次此涵数，PWM占空比加一
 390          void ConfigPWM(unsigned char t)  //PWM占空比处理函数
 391          {
 392   1              static unsigned char dir=0;    //定义变亮或变暗方向
 393   1              static unsigned char index=0;  //定义变色索引
 394   1              static unsigned int time=0;    //中间变量
 395   1      
 396   1              switch(index)
 397   1              {
 398   2          case 0: 
 399   2                              if(dir==0)      //红色由暗变亮
 400   2                              {
 401   3                                      time+=t;
 402   3                                      R_OUT=time;
 403   3              G_OUT=0;
 404   3                                      B_OUT=0;
 405   3                                      if(time>=MAX)
 406   3                                      {
 407   4                                              dir=1;
 408   4                                      }
 409   3                              }
 410   2                              else         //红色由亮变暗
 411   2                              {
 412   3                                      time-=t;
 413   3                                      R_OUT=time;
 414   3              G_OUT=0;
 415   3                                      B_OUT=0;
 416   3                                      if(time<=MIN)
 417   3                                      {
 418   4                                              dir=0;
 419   4                                              time=0;
 420   4                                              index=1;
 421   4                                      }
 422   3                              }
 423   2                              break;
 424   2                                             
C51 COMPILER V9.60.0.0   PWM_OLD                                                           07/06/2022 19:19:43 PAGE 8   

 425   2                      case 1:            
 426   2                              if(dir==0)                //橙色由暗变亮
 427   2                              {
 428   3                                      time+=t;
 429   3                                      R_OUT=time;
 430   3              G_OUT=time/2;
 431   3                                      B_OUT=0;
 432   3                                      if(time>=MAX)
 433   3                                      {
 434   4                                              dir=1;
 435   4                                      }
 436   3                              }
 437   2                              else                        //橙色由亮变暗
 438   2                              {
 439   3                                      time-=t;
 440   3                                      R_OUT=time;
 441   3              G_OUT=time/2;
 442   3                                      B_OUT=0;
 443   3                                      if(time<=MIN)
 444   3                                      {
 445   4                                              dir=0;
 446   4                                              time=0;
 447   4                                              index=2;
 448   4                                      }
 449   3                              }
 450   2                              break;
 451   2                                             
 452   2                      case 2:            
 453   2                              if(dir==0)                //黄色由暗变亮
 454   2                              {
 455   3                                      time+=t;
 456   3                                      R_OUT=time;
 457   3                                      G_OUT=time;
 458   3                                      B_OUT=0;
 459   3                                      if(time>=MAX)
 460   3                                      {
 461   4                                              dir=1;
 462   4                                      }
 463   3                              }
 464   2                              else                        //黄色由亮变暗
 465   2                              {
 466   3                                      time-=t;
 467   3                                      R_OUT=time;
 468   3                                      G_OUT=time;
 469   3                                      B_OUT=0;
 470   3                                      if(time<=MIN)
 471   3                                      {
 472   4                                              dir=0;
 473   4                                              time=0;
 474   4                                              index=3;
 475   4                                      }
 476   3                              }
 477   2                              break;
 478   2                                             
 479   2                      case 3:            
 480   2                              if(dir==0)                //绿色由暗变亮
 481   2                              {
 482   3                                      time+=t;
 483   3                                      R_OUT=0;
 484   3                                      G_OUT=time;
 485   3                                      B_OUT=0;
 486   3                                      if(time>=MAX)
C51 COMPILER V9.60.0.0   PWM_OLD                                                           07/06/2022 19:19:43 PAGE 9   

 487   3                                      {
 488   4                                              dir=1;
 489   4                                      }
 490   3                              }
 491   2                              else                        //绿色由亮变暗
 492   2                              {
 493   3                                      time-=t;
 494   3                                      R_OUT=0;
 495   3                                      G_OUT=time;
 496   3                                      B_OUT=0;
 497   3                                      if(time<=MIN)
 498   3                                      {
 499   4                                              dir=0;
 500   4                                              time=0;
 501   4                                              index=4;
 502   4                                      }
 503   3                              }
 504   2                              break;
 505   2                                             
 506   2                      case 4:           
 507   2                              if(dir==0)                //青色由暗变亮
 508   2                              {
 509   3                                      time+=t;
 510   3                                      R_OUT=0;
 511   3                                      G_OUT=time;
 512   3                                      B_OUT=time;
 513   3                                      if(time>=MAX)
 514   3                                      {
 515   4                                              dir=1;
 516   4                                      }
 517   3                              }
 518   2                              else                        //青色由亮变暗
 519   2                              {
 520   3                                      time-=t;
 521   3                                      R_OUT=0;
 522   3                                      G_OUT=time;
 523   3                                      B_OUT=time;
 524   3                                      if(time<=MIN)
 525   3                                      {
 526   4                                              dir=0;
 527   4                                              time=0;
 528   4                                              index=5;
 529   4                                      }
 530   3                              }
 531   2                              break;
 532   2                                             
 533   2                      case 5:            
 534   2                              if(dir==0)                //蓝色由暗变亮
 535   2                              {
 536   3                                      time+=t;
 537   3                                      R_OUT=0;
 538   3                                      G_OUT=0;
 539   3                                      B_OUT=time;
 540   3                                      if(time>=MAX)
 541   3                                      {
 542   4                                              dir=1;
 543   4                                      }
 544   3                              }
 545   2                              else                        //蓝色由亮变暗
 546   2                              {
 547   3                                      time-=t;
 548   3                                      R_OUT=0;
C51 COMPILER V9.60.0.0   PWM_OLD                                                           07/06/2022 19:19:43 PAGE 10  

 549   3                                      G_OUT=0;
 550   3                                      B_OUT=time;
 551   3                                      if(time<=MIN)
 552   3                                      {
 553   4                                              dir=0;
 554   4                                              time=0;
 555   4                                              index=6;
 556   4                                      }
 557   3                              }
 558   2                              break;
 559   2                                             
 560   2                      case 6:            
 561   2                              if(dir==0)                //紫色由暗变亮
 562   2                              {
 563   3                                      time+=t;
 564   3                                      R_OUT=time;
 565   3                                      G_OUT=0;
 566   3                                      B_OUT=time;
 567   3                                      if(time>=MAX)
 568   3                                      {
 569   4                                              dir=1;
 570   4                                      }
 571   3                              }
 572   2                              else                        //紫色由亮变暗
 573   2                              {
 574   3                                      time-=t;
 575   3                                      R_OUT=time;
 576   3                                      G_OUT=0;
 577   3                                      B_OUT=time;
 578   3                                      if(time<=MIN)
 579   3                                      {
 580   4                                              dir=0;
 581   4                                              time=0;
 582   4                                              index=7;
 583   4                                      }
 584   3                              }
 585   2                              break;
 586   2                                             
 587   2                      case 7:            
 588   2                              if(dir==0)                //白色由暗变亮
 589   2                              {
 590   3                                      time+=t;
 591   3                                      G_OUT=time;
 592   3                                      B_OUT=time;
 593   3                                      R_OUT=time;
 594   3                                      if(time>=MAX)
 595   3                                      {
 596   4                                              dir=1;
 597   4                                      }
 598   3                              }
 599   2                              else                        //白色由亮变暗
 600   2                              {
 601   3                                      time-=t;
 602   3                                      G_OUT=time;
 603   3                                      B_OUT=time;
 604   3                                      R_OUT=time;
 605   3                                      if(time<=MIN)
 606   3                                      {
 607   4                                              dir=0;
 608   4                                              time=0;
 609   4                                              index=0;
 610   4                                      }
C51 COMPILER V9.60.0.0   PWM_OLD                                                           07/06/2022 19:19:43 PAGE 11  

 611   3                              }
 612   2                              break;
 613   2                       
 614   2              }
 615   1      }
 616          
 617          //输出占空比
 618          void POUT() 
 619          {
 620   1          unsigned char cnt;  
 621   1          for(cnt=0;cnt<MAX;cnt++)
 622   1          {
 623   2              if(cnt<R_OUT)
 624   2                      RED=1;        //红色占空比大于计数值时红灯亮
 625   2              else
 626   2                      RED=0;        //否则就关闭红色
 627   2                     
 628   2              if(cnt<G_OUT)               
 629   2                      GREEN=1;                //绿色占空比大于计数值时绿灯亮
 630   2              else
 631   2                      GREEN=0;                //否则就关闭绿色
 632   2                     
 633   2              if(cnt<B_OUT)
 634   2                      BLUE=1;                //蓝色占空比大于计数值时蓝灯亮
 635   2              else
 636   2                      BLUE=0;                //否则就关闭蓝色
 637   2          }
 638   1      }
 639          
 640          //定时器0中断涵数
 641          void timer0() interrupt 1   //1ms中断
 642          {
 643   1              static unsigned int tmr0;
 644   1              static unsigned int tmr1;
 645   1              TH0=0xFC;
 646   1              TL0=0x67;
 647   1              tmr0++;
 648   1              tmr1++;
 649   1      
 650   1              if(tmr0>=10)  //每10ms刷新一次占空比
 651   1              {
 652   2                      tmr0=0;
 653   2                      time_flag0=1;
 654   2                      //ConfigPWM(1);
 655   2              }
 656   1              if(tmr1>=2)  //2ms输出PWM
 657   1              {
 658   2                      tmr1=0;
 659   2                      time_flag1=1;
 660   2                      D3 = 1;
 661   2              }
 662   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1771    ----
   CONSTANT SIZE    =      9    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     23      23
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
C51 COMPILER V9.60.0.0   PWM_OLD                                                           07/06/2022 19:19:43 PAGE 12  

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
